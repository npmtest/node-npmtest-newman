{"/home/travis/build/npmtest/node-npmtest-newman/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_newman */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-newman/lib.npmtest_newman.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/lib.npmtest_newman.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":51}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":57}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_newman */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_newman = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_newman = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-newman/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":50}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":64},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-newman && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_newman */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_newman","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_newman.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_newman.rollup.js'] =","            local.assetsDict['/assets.npmtest_newman.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_newman.__dirname + '/lib.npmtest_newman.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}}},"branchMap":{},"code":["/**!"," * @license Copyright 2016 Postdot Technologies, Inc."," *"," * Licensed under the Apache License, Version 2.0 (the \"License\");"," * you may not use this file except in compliance with the License."," * You may obtain a copy of the License at"," *"," *    http://www.apache.org/licenses/LICENSE-2.0"," *"," * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on"," * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."," * See the License for the specific language governing permissions and limitations under the License."," */","module.exports = require('./lib');",""],"l":{"14":1}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":4,"column":2}}},"branchMap":{},"code":["module.exports = {","    run: require('./run'),","    version: require('./version')","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/run/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/run/index.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"(anonymous_1)","line":65,"loc":{"start":{"line":65,"column":17},"end":{"line":65,"column":46}}},"2":{"name":"(anonymous_2)","line":77,"loc":{"start":{"line":77,"column":24},"end":{"line":77,"column":48}}},"3":{"name":"(anonymous_3)","line":120,"loc":{"start":{"line":120,"column":11},"end":{"line":120,"column":31}}},"4":{"name":"(anonymous_4)","line":126,"loc":{"start":{"line":126,"column":37},"end":{"line":126,"column":70}}},"5":{"name":"(anonymous_5)","line":128,"loc":{"start":{"line":128,"column":39},"end":{"line":128,"column":62}}},"6":{"name":"(anonymous_6)","line":134,"loc":{"start":{"line":134,"column":42},"end":{"line":134,"column":64}}},"7":{"name":"(anonymous_7)","line":153,"loc":{"start":{"line":153,"column":25},"end":{"line":153,"column":50}}},"8":{"name":"(anonymous_8)","line":169,"loc":{"start":{"line":169,"column":27},"end":{"line":169,"column":50}}},"9":{"name":"(anonymous_9)","line":184,"loc":{"start":{"line":184,"column":22},"end":{"line":184,"column":45}}},"10":{"name":"(anonymous_10)","line":201,"loc":{"start":{"line":201,"column":72},"end":{"line":201,"column":88}}},"11":{"name":"(anonymous_11)","line":218,"loc":{"start":{"line":218,"column":59},"end":{"line":218,"column":74}}},"12":{"name":"(anonymous_12)","line":229,"loc":{"start":{"line":229,"column":33},"end":{"line":229,"column":51}}},"13":{"name":"(anonymous_13)","line":235,"loc":{"start":{"line":235,"column":63},"end":{"line":235,"column":92}}},"14":{"name":"(anonymous_14)","line":252,"loc":{"start":{"line":252,"column":39},"end":{"line":252,"column":57}}},"15":{"name":"(anonymous_15)","line":259,"loc":{"start":{"line":259,"column":57},"end":{"line":259,"column":81}}},"16":{"name":"(anonymous_16)","line":268,"loc":{"start":{"line":268,"column":44},"end":{"line":268,"column":60}}},"17":{"name":"(anonymous_17)","line":306,"loc":{"start":{"line":306,"column":13},"end":{"line":306,"column":34}}},"18":{"name":"(anonymous_18)","line":308,"loc":{"start":{"line":308,"column":62},"end":{"line":308,"column":99}}},"19":{"name":"(anonymous_19)","line":317,"loc":{"start":{"line":317,"column":25},"end":{"line":317,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":48,"column":6}},"2":{"start":{"line":65,"column":0},"end":{"line":324,"column":2}},"3":{"start":{"line":67,"column":4},"end":{"line":70,"column":6}},"4":{"start":{"line":71,"column":4},"end":{"line":71,"column":51}},"5":{"start":{"line":73,"column":4},"end":{"line":74,"column":38}},"6":{"start":{"line":77,"column":4},"end":{"line":321,"column":7}},"7":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"8":{"start":{"line":79,"column":12},"end":{"line":79,"column":33}},"9":{"start":{"line":83,"column":8},"end":{"line":85,"column":9}},"10":{"start":{"line":84,"column":12},"end":{"line":84,"column":80}},"11":{"start":{"line":88,"column":8},"end":{"line":88,"column":59}},"12":{"start":{"line":91,"column":8},"end":{"line":91,"column":29}},"13":{"start":{"line":94,"column":8},"end":{"line":320,"column":11}},"14":{"start":{"line":121,"column":12},"end":{"line":123,"column":100}},"15":{"start":{"line":126,"column":12},"end":{"line":141,"column":15}},"16":{"start":{"line":128,"column":16},"end":{"line":140,"column":18}},"17":{"start":{"line":129,"column":20},"end":{"line":130,"column":49}},"18":{"start":{"line":134,"column":20},"end":{"line":136,"column":23}},"19":{"start":{"line":135,"column":24},"end":{"line":135,"column":51}},"20":{"start":{"line":138,"column":20},"end":{"line":138,"column":49}},"21":{"start":{"line":139,"column":20},"end":{"line":139,"column":54}},"22":{"start":{"line":144,"column":12},"end":{"line":224,"column":15}},"23":{"start":{"line":154,"column":20},"end":{"line":158,"column":23}},"24":{"start":{"line":170,"column":20},"end":{"line":173,"column":23}},"25":{"start":{"line":188,"column":20},"end":{"line":192,"column":21}},"26":{"start":{"line":189,"column":24},"end":{"line":189,"column":67}},"27":{"start":{"line":190,"column":24},"end":{"line":190,"column":55}},"28":{"start":{"line":191,"column":24},"end":{"line":191,"column":31}},"29":{"start":{"line":196,"column":20},"end":{"line":199,"column":23}},"30":{"start":{"line":201,"column":20},"end":{"line":216,"column":23}},"31":{"start":{"line":203,"column":24},"end":{"line":203,"column":81}},"32":{"start":{"line":206,"column":24},"end":{"line":215,"column":27}},"33":{"start":{"line":218,"column":20},"end":{"line":222,"column":23}},"34":{"start":{"line":220,"column":24},"end":{"line":220,"column":67}},"35":{"start":{"line":221,"column":24},"end":{"line":221,"column":55}},"36":{"start":{"line":229,"column":12},"end":{"line":250,"column":15}},"37":{"start":{"line":232,"column":16},"end":{"line":233,"column":58}},"38":{"start":{"line":235,"column":16},"end":{"line":246,"column":19}},"39":{"start":{"line":236,"column":20},"end":{"line":244,"column":65}},"40":{"start":{"line":245,"column":20},"end":{"line":245,"column":31}},"41":{"start":{"line":249,"column":16},"end":{"line":249,"column":62}},"42":{"start":{"line":252,"column":12},"end":{"line":255,"column":15}},"43":{"start":{"line":254,"column":16},"end":{"line":254,"column":116}},"44":{"start":{"line":258,"column":12},"end":{"line":258,"column":59}},"45":{"start":{"line":259,"column":12},"end":{"line":303,"column":15}},"46":{"start":{"line":261,"column":16},"end":{"line":261,"column":71}},"47":{"start":{"line":261,"column":62},"end":{"line":261,"column":69}},"48":{"start":{"line":263,"column":16},"end":{"line":263,"column":62}},"49":{"start":{"line":266,"column":16},"end":{"line":283,"column":17}},"50":{"start":{"line":267,"column":20},"end":{"line":282,"column":37}},"51":{"start":{"line":268,"column":24},"end":{"line":278,"column":42}},"52":{"start":{"line":269,"column":28},"end":{"line":270,"column":106}},"53":{"start":{"line":272,"column":28},"end":{"line":275,"column":29}},"54":{"start":{"line":273,"column":32},"end":{"line":273,"column":47}},"55":{"start":{"line":274,"column":32},"end":{"line":274,"column":65}},"56":{"start":{"line":277,"column":28},"end":{"line":277,"column":70}},"57":{"start":{"line":285,"column":16},"end":{"line":296,"column":17}},"58":{"start":{"line":288,"column":20},"end":{"line":289,"column":82}},"59":{"start":{"line":295,"column":20},"end":{"line":295,"column":40}},"60":{"start":{"line":299,"column":16},"end":{"line":302,"column":17}},"61":{"start":{"line":301,"column":20},"end":{"line":301,"column":100}},"62":{"start":{"line":306,"column":12},"end":{"line":314,"column":34}},"63":{"start":{"line":308,"column":16},"end":{"line":310,"column":20}},"64":{"start":{"line":309,"column":20},"end":{"line":309,"column":66}},"65":{"start":{"line":312,"column":16},"end":{"line":313,"column":116}},"66":{"start":{"line":317,"column":12},"end":{"line":319,"column":15}},"67":{"start":{"line":318,"column":16},"end":{"line":318,"column":37}},"68":{"start":{"line":323,"column":4},"end":{"line":323,"column":19}}},"branchMap":{"1":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":5},"end":{"line":67,"column":14}},{"start":{"line":67,"column":18},"end":{"line":67,"column":39}},{"start":{"line":68,"column":8},"end":{"line":69,"column":22}}]},"2":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":27}},{"start":{"line":71,"column":32},"end":{"line":71,"column":49}}]},"3":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":8}},{"start":{"line":78,"column":8},"end":{"line":78,"column":8}}]},"4":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":8}},{"start":{"line":83,"column":8},"end":{"line":83,"column":8}}]},"5":{"line":106,"type":"cond-expr","locations":[{"start":{"line":106,"column":46},"end":{"line":106,"column":81}},{"start":{"line":106,"column":84},"end":{"line":106,"column":93}}]},"6":{"line":110,"type":"cond-expr","locations":[{"start":{"line":110,"column":69},"end":{"line":110,"column":93}},{"start":{"line":110,"column":96},"end":{"line":110,"column":105}}]},"7":{"line":111,"type":"cond-expr","locations":[{"start":{"line":111,"column":56},"end":{"line":111,"column":73}},{"start":{"line":111,"column":76},"end":{"line":111,"column":85}}]},"8":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":26},"end":{"line":113,"column":47}},{"start":{"line":113,"column":51},"end":{"line":119,"column":15}}]},"9":{"line":123,"type":"cond-expr","locations":[{"start":{"line":123,"column":60},"end":{"line":123,"column":79}},{"start":{"line":123,"column":82},"end":{"line":123,"column":99}}]},"10":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":20},"end":{"line":188,"column":20}},{"start":{"line":188,"column":20},"end":{"line":188,"column":20}}]},"11":{"line":206,"type":"binary-expr","locations":[{"start":{"line":206,"column":24},"end":{"line":206,"column":28}},{"start":{"line":206,"column":32},"end":{"line":215,"column":26}}]},"12":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":27},"end":{"line":233,"column":28}},{"start":{"line":233,"column":32},"end":{"line":233,"column":39}},{"start":{"line":233,"column":43},"end":{"line":233,"column":57}}]},"13":{"line":236,"type":"cond-expr","locations":[{"start":{"line":236,"column":56},"end":{"line":236,"column":60}},{"start":{"line":236,"column":63},"end":{"line":244,"column":21}}]},"14":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":30},"end":{"line":243,"column":38}},{"start":{"line":243,"column":42},"end":{"line":243,"column":59}},{"start":{"line":243,"column":63},"end":{"line":243,"column":64}}]},"15":{"line":249,"type":"binary-expr","locations":[{"start":{"line":249,"column":16},"end":{"line":249,"column":20}},{"start":{"line":249,"column":24},"end":{"line":249,"column":61}}]},"16":{"line":254,"type":"binary-expr","locations":[{"start":{"line":254,"column":16},"end":{"line":254,"column":17}},{"start":{"line":254,"column":21},"end":{"line":254,"column":28}},{"start":{"line":254,"column":32},"end":{"line":254,"column":39}},{"start":{"line":254,"column":43},"end":{"line":254,"column":115}}]},"17":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":12},"end":{"line":258,"column":30}},{"start":{"line":258,"column":35},"end":{"line":258,"column":57}}]},"18":{"line":259,"type":"binary-expr","locations":[{"start":{"line":259,"column":12},"end":{"line":259,"column":32}},{"start":{"line":259,"column":36},"end":{"line":303,"column":14}}]},"19":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":16},"end":{"line":261,"column":16}},{"start":{"line":261,"column":16},"end":{"line":261,"column":16}}]},"20":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":16},"end":{"line":266,"column":16}},{"start":{"line":266,"column":16},"end":{"line":266,"column":16}}]},"21":{"line":270,"type":"binary-expr","locations":[{"start":{"line":270,"column":41},"end":{"line":270,"column":63}},{"start":{"line":270,"column":68},"end":{"line":270,"column":105}}]},"22":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":28},"end":{"line":272,"column":28}},{"start":{"line":272,"column":28},"end":{"line":272,"column":28}}]},"23":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":20},"end":{"line":288,"column":28}},{"start":{"line":288,"column":33},"end":{"line":289,"column":80}}]},"24":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":16},"end":{"line":299,"column":16}},{"start":{"line":299,"column":16},"end":{"line":299,"column":16}}]},"25":{"line":299,"type":"binary-expr","locations":[{"start":{"line":299,"column":22},"end":{"line":299,"column":44}},{"start":{"line":299,"column":48},"end":{"line":299,"column":91}}]},"26":{"line":309,"type":"binary-expr","locations":[{"start":{"line":309,"column":20},"end":{"line":309,"column":37}},{"start":{"line":309,"column":42},"end":{"line":309,"column":64}}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":17},"end":{"line":312,"column":37}},{"start":{"line":313,"column":20},"end":{"line":313,"column":115}}]}},"code":["var fs = require('fs'),","    _ = require('lodash'),","    sdk = require('postman-collection'),","    asyncEach = require('async/each'),","    EventEmitter = require('eventemitter3'),","    runtime = require('postman-runtime'),","    util = require('../util'),","    exportFile = require('./export-file'),","    RunSummary = require('./summary'),","    getOptions = require('./options'),","    request = require('postman-request'),","","    /**","     * This object describes the various events raised by Newman, and what each event argument contains.","     * Error and cursor are present in all events.","     *","     * @type {Object}","     */","    runtimeEvents = {","        start: [],","        beforeIteration: [],","        beforeItem: ['item'],","        beforePrerequest: ['events', 'item'],","        prerequest: ['executions', 'item'],","        beforeRequest: ['request', 'item'],","        request: ['response', 'request', 'item'],","        beforeTest: ['events', 'item'],","        test: ['executions', 'item'],","        item: ['item'],","        iteration: [],","        beforeScript: ['script', 'event', 'item'],","        script: ['execution', 'script', 'event', 'item']","    },","","    /**","     * load all the default reporters here. if you have new reporter, add it to this list","     * we know someone, who does not like dynamic requires","     *","     * @type {Object}","     */","    defaultReporters = {","        cli: require('../reporters/cli'),","        json: require('../reporters/json'),","        html: require('../reporters/html'),","        junit: require('../reporters/junit'),","        progress: require('../reporters/progress'),","        emojitrain: require('../reporters/emojitrain')","    };","","/**"," * Runs the collection, with all the provided options, returning an EventEmitter."," *"," * @param {Object} options - The set of wrapped options, passed by the CLI parser."," * @param {Collection|Object|String} options.collection - A JSON / Collection / String representing the collection."," * @param {Object|String} options.environment - An environment JSON / file path for the current collection run."," * @param {Object|String} options.globals - A globals JSON / file path for the current collection run."," * @param {Object|String} options.iterationData - An iterationDate JSON / file path for the current collection run."," * @param {Object|String} options.reporters - A set of reporter names and their associated options for the current run."," * @param {String} options.exportGlobals - The relative path to export the globals file from the current run to."," * @param {String} options.exportEnvironment - The relative path to export the environment file from the current run to."," * @param {String} options.exportCollection - The relative path to export the collection from the current run to."," * @param {Function} callback - The callback function invoked to mark the end of the collection run."," * @returns {EventEmitter} - An EventEmitter instance with done and error event attachments."," */","module.exports = function (options, callback) {","    // validate all options. it is to be noted that `options` parameter is option and is polymorphic","    (!callback && _.isFunction(options)) && (","        (callback = options),","        (options = {})","    );","    !_.isFunction(callback) && (callback = _.noop);","","    var emitter = new EventEmitter(), // @todo: create a new inherited constructor","        runner = new runtime.Runner();","","    // get the configuration from various sources","    getOptions(options, function (err, options) {","        if (err) {","            return callback(err);","        }","","        // ensure that the collection option is present before starting a run","        if (!_.isObject(options.collection)) {","            return callback(new Error('newman: expecting a collection to run'));","        }","","        // store summary object and other relevant information inside the emitter","        emitter.summary = new RunSummary(emitter, options);","","        // to store the exported content from reporters","        emitter.exports = [];","","        // now start the run!","        runner.run(options.collection, {","            stopOnFailure: options.bail, // LOL, you just got trolled ¯\\_(ツ)_/¯","            abortOnFailure: options.abortOnFailure, // used in integration tests, to be considered for a future release","            iterationCount: options.iterationCount,","            environment: options.environment,","            globals: options.globals,","            entrypoint: options.folder,","            data: options.iterationData,","            delay: {","                item: options.delayRequest","            },","            // todo: add support for more types of timeouts, currently only request is supported","            timeout: options.timeoutRequest ? { request: options.timeoutRequest } : undefined,","            fileResolver: fs,","            requester: {","                cookieJar: request.jar(),","                followRedirects: _.has(options, 'ignoreRedirects') ? !options.ignoreRedirects : undefined,","                strictSSL: _.has(options, 'insecure') ? !options.insecure : undefined","            },","            certificates: options.sslClientCert && new sdk.CertificateList({}, [{","                name: 'client-cert',","                matches: [sdk.UrlMatchPattern.MATCH_ALL_URLS],","                key: { src: options.sslClientKey },","                cert: { src: options.sslClientCert },","                passphrase: options.sslClientPassphrase","            }])","        }, function (err, run) {","            var callbacks = {},","                // ensure that the reporter option type polymorphism is handled","                reporters = _.isString(options.reporters) ? [options.reporters] : options.reporters;","","            // emit events for all the callbacks triggered by the runtime","            _.forEach(runtimeEvents, function (definition, eventName) {","                // intercept each runtime.* callback and expose a global object based event","                callbacks[eventName] = function (err, cursor) {","                    var args = arguments,","                        obj = { cursor: cursor };","","                    // convert the arguments into an object by taking the key name reference from the definition","                    // object","                    _.forEach(definition, function (key, index) {","                        obj[key] = args[index + 2]; // first two are err, cursor","                    });","","                    args = [eventName, err, obj];","                    emitter.emit.apply(emitter, args); // eslint-disable-line prefer-spread","                };","            });","","            // add non generic callback handling","            _.assignIn(callbacks, {","","                /**","                 * Bubbles up console messages.","                 *","                 * @param {Object} cursor - The run cursor instance.","                 * @param {String} level - The level of console logging [error, silent, etc].","                 * @returns {*}","                 */","                console: function (cursor, level) {","                    emitter.emit('console', null, {","                        cursor: cursor,","                        level: level,","                        messages: _.slice(arguments, 2)","                    });","                },","","                /**","                 * The exception handler for the current run instance.","                 *","                 * @todo Fix bug of arg order in runtime.","                 * @param {Object} cursor - The run cursor.","                 * @param {?Error} err - An Error instance / null object.","                 * @returns {*}","                 */","                exception: function (cursor, err) {","                    emitter.emit('exception', null, {","                        cursor: cursor,","                        error: err","                    });","                },","","                /**","                 * Custom callback to override the `done` event to fire the end callback.","                 *","                 * @todo Do some memory cleanup here?","                 * @param {?Error} err - An error instance / null passed from the done event handler.","                 * @param {Object} cursor - The run instance cursor.","                 * @returns {*}","                 */","                done: function (err, cursor) {","                    // in case runtime faced an error during run, we do not process any other event and emit `done`.","                    // we do it this way since, an error in `done` callback would have anyway skipped any intermediate","                    // events or callbacks","                    if (err) {","                        emitter.emit('done', err, emitter.summary);","                        callback(err, emitter.summary);","                        return;","                    }","","                    // we emit a `beforeDone` event so that reporters and other such addons can do computation before","                    // the run is marked as done","                    emitter.emit('beforeDone', null, {","                        cursor: cursor,","                        summary: emitter.summary","                    });","","                    _.forEach(['environment', 'globals', 'collection'], function (item) {","                        // fetch the path name from options if one is provided","                        var path = _.get(options, _.camelCase(`export-${item}`));","","                        // if the options have an export path, then add the item to export queue","                        path && emitter.exports.push({","                            name: item,","                            default: `newman-${item}.json`,","                            path: path,","                            content: _.merge(emitter.summary[item].toJSON(), {","                                _postman_variable_scope: item,","                                _postman_exported_at: (new Date()).toISOString(),","                                _postman_exported_using: util.userAgent","                            })","                        });","                    });","","                    asyncEach(emitter.exports, exportFile, function (err) {","                        // we now trigger actual done event which we had overridden","                        emitter.emit('done', err, emitter.summary);","                        callback(err, emitter.summary);","                    });","                }","            });","","            // generate pseudo assertion events since runtime does not trigger assertion events yet.","            // without this, all reporters would needlessly need to extract assertions and create an error object","            // out of it","            emitter.on('script', function (err, o) {","                // we iterate on each test assertion to trigger an event. during this, we create a pseudo error object","                // for the assertion","                var index = 0,","                    type = o && o.event && o.event.listen;","","                _.forEach(_.get(o.execution, 'globals.tests'), function (passed, assertion) {","                    emitter.emit('assertion', (passed ? null : {","                        name: 'AssertionFailure',","                        index: index,","                        message: assertion,","","                        stack: 'AssertionFailure: Expected tests[\"' + assertion + '\"] to be truth-like\\n' +","                            '   at Object.eval test.js:' + (index + 1) + ':' +","                            ((o.cursor && o.cursor.position || 0) + 1) + ')'","                    }), _.assignIn({ assertion: assertion }, o));","                    index += 1;","                });","","                // bubble special script name based events","                type && emitter.emit(type + 'Script', err, o);","            });","","            emitter.on('beforeScript', function (err, o) {","                // bubble special script name based events","                o && o.event && o.event && emitter.emit(_.camelCase('before-' + o.event.listen + 'Script'), err, o);","            });","","            // initialise all the reporters","            !emitter.reporters && (emitter.reporters = {});","            _.isArray(reporters) && _.forEach(reporters, function (reporterName) {","                // disallow duplicate reporter initialisation","                if (_.has(emitter.reporters, reporterName)) { return; }","","                var Reporter = defaultReporters[reporterName];","","                // check if the reporter is not a local reporter, then load an external reporter","                if (!Reporter) {","                    try {","                        Reporter = require((function (name) { // ensure scoped packages are loaded","                            var prefix = '',","                                scope = (name.charAt(0) === '@') && name.substr(0, name.indexOf('/') + 1);","","                            if (scope) {","                                prefix = scope;","                                name = name.substr(scope.length);","                            }","","                            return prefix + 'newman-reporter-' + name;","                        }(reporterName)));","                    }","                    // we suppress this error since, the check of missing error is done later","                    // @todo - maybe have a debug mode and log error there","                    catch (error) { } // eslint-disable-line no-empty","                }","","                try {","                    // we could have checked _.isFunction(Reporter), here, but we do not do that so that the nature of","                    // reporter error can be bubbled up","                    Reporter && (emitter.reporters[reporterName] = new Reporter(emitter,","                        _.get(options, 'reporter.' + reporterName, {}), options));","                }","                catch (error) {","                    // if the reporter errored out during initialisation, we should not stop the run simply log","                    // the error stack trace for debugging","                    // @todo: route this via print module to respect silent flags","                    console.warn(error);","                }","","                // if the reporter is not loaded then we need to warn users","                if (!(_.isFunction(Reporter) && _.isObject(emitter.reporters[reporterName]))) {","                    // @todo: route this via print module to respect silent flags","                    console.warn(`newman warning: \"${reporterName}\" reporter could not be loaded.`);","                }","            });","","            // raise warning when more than one dominant reporters are used","            (function (reporters) {","                // find all reporters whose `dominant` key is set to true","                var conflicts = _.keys(_.transform(reporters, function (conflicts, reporter, name) {","                    reporter.dominant && (conflicts[name] = true);","                }));","","                (conflicts.length > 1) && // if more than one dominant, raise a warning","                    console.warn(`newman warning: ${conflicts.join(', ')} reporters might not work well together.`);","            }(emitter.reporters));","","            // we ensure that everything is async to comply with event paradigm and start the run","            setImmediate(function () {","                run.start(callbacks);","            });","        });","    });","","    return emitter;","};",""],"l":{"1":1,"65":1,"67":0,"71":0,"73":0,"77":0,"78":0,"79":0,"83":0,"84":0,"88":0,"91":0,"94":0,"121":0,"126":0,"128":0,"129":0,"134":0,"135":0,"138":0,"139":0,"144":0,"154":0,"170":0,"188":0,"189":0,"190":0,"191":0,"196":0,"201":0,"203":0,"206":0,"218":0,"220":0,"221":0,"229":0,"232":0,"235":0,"236":0,"245":0,"249":0,"252":0,"254":0,"258":0,"259":0,"261":0,"263":0,"266":0,"267":0,"268":0,"269":0,"272":0,"273":0,"274":0,"277":0,"285":0,"288":0,"295":0,"299":0,"301":0,"306":0,"308":0,"309":0,"312":0,"317":0,"318":0,"323":0}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/util.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/util.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":45,"loc":{"start":{"line":45,"column":14},"end":{"line":45,"column":28}}},"2":{"name":"(anonymous_2)","line":55,"loc":{"start":{"line":55,"column":14},"end":{"line":55,"column":31}}},"3":{"name":"(anonymous_3)","line":67,"loc":{"start":{"line":67,"column":17},"end":{"line":67,"column":44}}},"4":{"name":"(anonymous_4)","line":71,"loc":{"start":{"line":71,"column":27},"end":{"line":71,"column":45}}},"5":{"name":"(anonymous_5)","line":86,"loc":{"start":{"line":86,"column":15},"end":{"line":86,"column":54}}},"6":{"name":"(anonymous_6)","line":108,"loc":{"start":{"line":108,"column":34},"end":{"line":108,"column":56}}},"7":{"name":"(anonymous_7)","line":132,"loc":{"start":{"line":132,"column":11},"end":{"line":132,"column":50}}},"8":{"name":"(anonymous_8)","line":142,"loc":{"start":{"line":142,"column":34},"end":{"line":142,"column":56}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":21,"column":43}},"2":{"start":{"line":23,"column":0},"end":{"line":149,"column":2}},"3":{"start":{"line":46,"column":8},"end":{"line":46,"column":73}},"4":{"start":{"line":56,"column":8},"end":{"line":56,"column":54}},"5":{"start":{"line":68,"column":8},"end":{"line":68,"column":107}},"6":{"start":{"line":68,"column":98},"end":{"line":68,"column":105}},"7":{"start":{"line":70,"column":8},"end":{"line":70,"column":23}},"8":{"start":{"line":71,"column":8},"end":{"line":71,"column":91}},"9":{"start":{"line":71,"column":47},"end":{"line":71,"column":87}},"10":{"start":{"line":73,"column":8},"end":{"line":73,"column":47}},"11":{"start":{"line":74,"column":8},"end":{"line":74,"column":67}},"12":{"start":{"line":87,"column":8},"end":{"line":87,"column":81}},"13":{"start":{"line":88,"column":8},"end":{"line":121,"column":15}},"14":{"start":{"line":95,"column":16},"end":{"line":97,"column":17}},"15":{"start":{"line":96,"column":20},"end":{"line":96,"column":103}},"16":{"start":{"line":99,"column":16},"end":{"line":104,"column":17}},"17":{"start":{"line":100,"column":20},"end":{"line":100,"column":65}},"18":{"start":{"line":103,"column":20},"end":{"line":103,"column":111}},"19":{"start":{"line":106,"column":16},"end":{"line":106,"column":44}},"20":{"start":{"line":109,"column":16},"end":{"line":111,"column":17}},"21":{"start":{"line":110,"column":20},"end":{"line":110,"column":103}},"22":{"start":{"line":113,"column":16},"end":{"line":118,"column":17}},"23":{"start":{"line":114,"column":20},"end":{"line":114,"column":56}},"24":{"start":{"line":117,"column":20},"end":{"line":117,"column":114}},"25":{"start":{"line":120,"column":16},"end":{"line":120,"column":45}},"26":{"start":{"line":133,"column":8},"end":{"line":133,"column":81}},"27":{"start":{"line":134,"column":8},"end":{"line":147,"column":15}},"28":{"start":{"line":137,"column":16},"end":{"line":139,"column":17}},"29":{"start":{"line":138,"column":20},"end":{"line":138,"column":41}},"30":{"start":{"line":140,"column":16},"end":{"line":140,"column":44}},"31":{"start":{"line":143,"column":16},"end":{"line":145,"column":17}},"32":{"start":{"line":144,"column":20},"end":{"line":144,"column":41}},"33":{"start":{"line":146,"column":16},"end":{"line":146,"column":56}},"34":{"start":{"line":151,"column":0},"end":{"line":151,"column":22}}},"branchMap":{"1":{"line":46,"type":"cond-expr","locations":[{"start":{"line":46,"column":29},"end":{"line":46,"column":52}},{"start":{"line":46,"column":55},"end":{"line":46,"column":72}}]},"2":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":64},"end":{"line":46,"column":66}},{"start":{"line":46,"column":70},"end":{"line":46,"column":71}}]},"3":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":24},"end":{"line":56,"column":29}},{"start":{"line":56,"column":33},"end":{"line":56,"column":34}}]},"4":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":8}},{"start":{"line":68,"column":8},"end":{"line":68,"column":8}}]},"5":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":12},"end":{"line":68,"column":27}},{"start":{"line":68,"column":31},"end":{"line":68,"column":57}},{"start":{"line":68,"column":61},"end":{"line":68,"column":94}}]},"6":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":61},"end":{"line":71,"column":72}},{"start":{"line":71,"column":76},"end":{"line":71,"column":85}}]},"7":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":8},"end":{"line":73,"column":21}},{"start":{"line":73,"column":25},"end":{"line":73,"column":46}}]},"8":{"line":74,"type":"cond-expr","locations":[{"start":{"line":74,"column":50},"end":{"line":74,"column":59}},{"start":{"line":74,"column":62},"end":{"line":74,"column":65}}]},"9":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":17}},{"start":{"line":87,"column":21},"end":{"line":87,"column":42}},{"start":{"line":87,"column":47},"end":{"line":87,"column":79}}]},"10":{"line":88,"type":"cond-expr","locations":[{"start":{"line":90,"column":12},"end":{"line":107,"column":14}},{"start":{"line":108,"column":12},"end":{"line":121,"column":14}}]},"11":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":16},"end":{"line":95,"column":16}},{"start":{"line":95,"column":16},"end":{"line":95,"column":16}}]},"12":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":20},"end":{"line":100,"column":36}},{"start":{"line":100,"column":41},"end":{"line":100,"column":63}}]},"13":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":16},"end":{"line":109,"column":16}},{"start":{"line":109,"column":16},"end":{"line":109,"column":16}}]},"14":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":8},"end":{"line":133,"column":17}},{"start":{"line":133,"column":21},"end":{"line":133,"column":42}},{"start":{"line":133,"column":47},"end":{"line":133,"column":79}}]},"15":{"line":134,"type":"cond-expr","locations":[{"start":{"line":136,"column":12},"end":{"line":141,"column":14}},{"start":{"line":142,"column":12},"end":{"line":147,"column":14}}]},"16":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":16},"end":{"line":137,"column":16}},{"start":{"line":137,"column":16},"end":{"line":137,"column":16}}]},"17":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":16},"end":{"line":143,"column":16}},{"start":{"line":143,"column":16},"end":{"line":143,"column":16}}]}},"code":["var fs = require('fs'),","","    _ = require('lodash'),","    prettyms = require('pretty-ms'),","    filesize = require('filesize'),","    request = require('postman-request'),","    parseJson = require('parse-json'),","","    util,","    version = require('../package.json').version,","","    SEP = ' / ',","","    /**","     * The auxilliary character used to prettify file sizes from raw byte counts.","     *","     * @type {Object}","     */","    FILESIZE_OPTIONS = { spacer: '' },","","    USER_AGENT_VALUE = 'Newman/' + version;","","util = {","","    /**","     * The raw newman version, taken from package.json in the root directory","     *","     * @type {String}","     */","    version: version,","","    /**","     * The user agent that this newman identifies as.","     *","     * @type {String}","     */","    userAgent: USER_AGENT_VALUE,","","    /**","     * A utility helper method that prettifies and returns raw millisecond counts.","     *","     * @param {Number} ms - The raw millisecond count, usually from response times.","     * @returns {String} - The pretified time, scaled to units of time, depending on the input value.","     */","    prettyms: function (ms) {","        return (ms < 1998) ? `${parseInt(ms, 10)}ms` : prettyms(ms || 0);","    },","","    /**","     * A utility helper method to prettify byte counts into human readable strings.","     *","     * @param {Number} bytes - The raw byte count, usually from computed response sizes.","     * @returns {String} - The prettified size, suffixed with scaled units, depending on the actual value provided.","     */","    filesize: function (bytes) {","        return filesize(bytes || 0, FILESIZE_OPTIONS);","    },","","    /**","     * Resolves the fully qualified name for the provided item","     *","     * @param {PostmanItem|PostmanItemGroup} item The item for which to resolve the full name","     * @param {?String} [separator=SEP] The separator symbol to join path name entries with","     * @returns {String} The full name of the provided item, including prepended parent item names","     * @private","     */","    getFullName: function (item, separator) {","        if (_.isEmpty(item) || !_.isFunction(item.parent) || !_.isFunction(item.forEachParent)) { return; }","","        var chain = [];","        item.forEachParent(function (parent) { chain.unshift(parent.name || parent.id); });","","        item.parent() && chain.push(item.name); // Add the current item only if it is not the collection instance","        return chain.join(_.isString(separator) ? separator : SEP);","    },","","    /**","     * Loads JSON data from the given location.","     *","     * @param {String} location - Can be an HTTP URL or a local file path.","     * @param {Object=} options - A set of options for JSON data loading.","     * @param {Object} options.apikey - Postman's cloud API Key (if the resource is being loaded from Postman Cloud).","     * @param {Function} callback - The function whose invocation marks the end of the JSON fetch routine.","     * @returns {*}","     */","    fetchJson: function (location, options, callback) {","        !callback && _.isFunction(options) && (callback = options, options = {});","        return (/^https?:\\/\\/.*/).test(location) ?","            // Load from URL","            request.get({","                url: location,","                json: true,","                headers: { 'User-Agent': USER_AGENT_VALUE }","            }, (err, response, body) => {","                if (err) {","                    return callback(_.set(err, 'help', `unable to fetch data from url \"${location}\"`));","                }","","                try {","                    _.isString(body) && (body = parseJson(body));","                }","                catch (e) {","                    return callback(_.set(e, 'help', `the url \"${location}\" did not provide valid JSON data`));","                }","","                return callback(null, body);","            }) :","            fs.readFile(location, function (err, value) {","                if (err) {","                    return callback(_.set(err, 'help', `unable to read data from file \"${location}\"`));","                }","","                try {","                    value = parseJson(value.toString());","                }","                catch (e) {","                    return callback(_.set(e, 'help', `the file at ${location} does not contain valid JSON data`));","                }","","                return callback(null, value);","            });","    },","","    /**","     * Loads raw data from a location, useful for working with non JSON data such as CSV files.","     *","     * @param {String} location - The relative path / URL to the raw data file.","     * @param {Object=} options - A set of load options for the raw data file.","     * @param {Function} callback - The callback function whose invocation marks the end of the fetch routine.","     * @returns {*}","     */","    fetch: function (location, options, callback) {","        !callback && _.isFunction(options) && (callback = options, options = {});","        return (/^https?:\\/\\/.*/).test(location) ?","            // Load from URL","            request.get({ url: location }, (err, response, body) => {","                if (err) {","                    return callback(err);","                }","                return callback(null, body);","            }) :","            fs.readFile(location, function (err, value) {","                if (err) {","                    return callback(err);","                }","                return callback(null, value.toString());","            });","    }","};","","module.exports = util;",""],"l":{"1":1,"23":1,"46":0,"56":0,"68":0,"70":0,"71":0,"73":0,"74":0,"87":0,"88":0,"95":0,"96":0,"99":0,"100":0,"103":0,"106":0,"109":0,"110":0,"113":0,"114":0,"117":0,"120":0,"133":0,"134":0,"137":0,"138":0,"140":0,"143":0,"144":0,"146":0,"151":1}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/run/export-file.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/run/export-file.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":33,"loc":{"start":{"line":33,"column":16},"end":{"line":33,"column":43}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":17},"end":{"line":47,"column":42}}},"3":{"name":"(anonymous_3)","line":74,"loc":{"start":{"line":74,"column":25},"end":{"line":74,"column":40}}},"4":{"name":"(anonymous_4)","line":80,"loc":{"start":{"line":80,"column":49},"end":{"line":80,"column":64}}},"5":{"name":"(anonymous_5)","line":87,"loc":{"start":{"line":87,"column":45},"end":{"line":87,"column":60}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":36,"column":6}},"2":{"start":{"line":35,"column":8},"end":{"line":35,"column":113}},"3":{"start":{"line":47,"column":0},"end":{"line":92,"column":2}},"4":{"start":{"line":49,"column":4},"end":{"line":50,"column":116}},"5":{"start":{"line":54,"column":4},"end":{"line":63,"column":5}},"6":{"start":{"line":55,"column":8},"end":{"line":55,"column":42}},"7":{"start":{"line":57,"column":8},"end":{"line":57,"column":22}},"8":{"start":{"line":58,"column":8},"end":{"line":58,"column":28}},"9":{"start":{"line":61,"column":8},"end":{"line":61,"column":51}},"10":{"start":{"line":62,"column":8},"end":{"line":62,"column":41}},"11":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"12":{"start":{"line":66,"column":8},"end":{"line":66,"column":15}},"13":{"start":{"line":70,"column":4},"end":{"line":70,"column":50}},"14":{"start":{"line":73,"column":4},"end":{"line":91,"column":5}},"15":{"start":{"line":74,"column":8},"end":{"line":84,"column":11}},"16":{"start":{"line":75,"column":12},"end":{"line":78,"column":13}},"17":{"start":{"line":76,"column":16},"end":{"line":77,"column":112}},"18":{"start":{"line":80,"column":12},"end":{"line":83,"column":15}},"19":{"start":{"line":81,"column":16},"end":{"line":82,"column":108}},"20":{"start":{"line":87,"column":8},"end":{"line":90,"column":11}},"21":{"start":{"line":88,"column":12},"end":{"line":89,"column":104}}},"branchMap":{"1":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":16},"end":{"line":35,"column":20}},{"start":{"line":35,"column":24},"end":{"line":35,"column":34}}]},"2":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":93},"end":{"line":35,"column":102}},{"start":{"line":35,"column":105},"end":{"line":35,"column":111}}]},"3":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":15},"end":{"line":49,"column":39}},{"start":{"line":49,"column":43},"end":{"line":49,"column":66}}]},"4":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":53},"end":{"line":50,"column":90}},{"start":{"line":50,"column":94},"end":{"line":50,"column":114}}]},"5":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":94},"end":{"line":50,"column":109}},{"start":{"line":50,"column":113},"end":{"line":50,"column":114}}]},"6":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"7":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":13}},{"start":{"line":54,"column":17},"end":{"line":54,"column":44}}]},"8":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"9":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":10},"end":{"line":65,"column":14}},{"start":{"line":65,"column":18},"end":{"line":65,"column":27}}]},"10":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"11":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":12},"end":{"line":75,"column":12}},{"start":{"line":75,"column":12},"end":{"line":75,"column":12}}]},"12":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":75},"end":{"line":77,"column":87}},{"start":{"line":77,"column":91},"end":{"line":77,"column":107}}]},"13":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":65},"end":{"line":82,"column":77}},{"start":{"line":82,"column":81},"end":{"line":82,"column":97}}]},"14":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":61},"end":{"line":89,"column":73}},{"start":{"line":89,"column":77},"end":{"line":89,"column":93}}]}},"code":["var _ = require('lodash'),","    fs = require('fs'),","    parsePath = require('path').parse,","    joinPath = require('path').join,","    mkdirp = require('mkdirp'),","","    /**","     * The root path specifier","     *","     * @const","     * @private","     * @type {string}","     */","    E = '',","","    /**","     * Default timestamp separator.","     *","     * @const","     * @private","     * @type {string}","     */","    TS_SEP = '-',","","    /**","     * Generate a timestamp from date","     *","     * @param {Date=} date - The timestmap used to mark the exported file.","     * @param {String=} separator - The optional string with which to seperate different sections of the timestamp,","     * defaults to TS_SEP","     * @returns {String} - yyyy-mm-dd-HH-MM-SS-MS-0","     */","    timestamp = function (date, separator) {","        // use the iso string to ensure left padding and other stuff is taken care of","        return (date || new Date()).toISOString().replace(/[^\\d]+/g, _.isString(separator) ? separator : TS_SEP);","    };","","/**"," * Module whose job is to export a file which is in an export format."," *"," * @param {Object} options - The set of file export options."," * @param {String} options.path - The path to the exported file."," * @param {String|Object} options.content - The JSON / stringified content that is to be written to the file."," * @param {Function} done - The callback whose invocation marks the end of the file export routine."," * @returns {*}"," */","module.exports = function (options, done) {","    // parse the path if one is available as string","    var path = _.isString(options.path) && parsePath(options.path),","        content = _.isPlainObject(options.content) ? JSON.stringify(options.content, 0, 2) : (options.content || E);","","    // if a path was not provided by user, we need to prepare the default path. but create the default path only if one","    // is provided.","    if (!path && _.isString(options.default)) {","        path = parsePath(options.default);","        // delete the path and directory if one is detected when parsing defaults","        path.root = E;","        path.dir = 'newman';","","        // append timestamp","        path.name = `${path.name}-${timestamp()}0`; // @todo make -0 become incremental if file name exists","        path.base = path.name + path.ext;","    }","    // final check that path is valid","    if (!(path && path.base)) {","        return;","    }","","    // now sore the unparsed result back for quick re-use during writing and a single place for unparsing","    path.unparsed = joinPath(path.dir, path.base);","","    // in case the path has a directory, ensure that the directory is available","    if (path.dir) {","        mkdirp(path.dir, function (err) {","            if (err) {","                return done(_.set(err, 'help',","                    `error creating path for file \"${path.unparsed}\" for ${options.name || 'unknown-source'}`));","            }","","            fs.writeFile(path.unparsed, content, function (err) {","                done(_.set(err, 'help',","                    `error writing file \"${path.unparsed}\" for ${options.name || 'unknown-source'}`), path);","            });","        });","    }","    else {","        fs.writeFile(path.unparsed, content, function (err) {","            done(_.set(err, 'help',","                `error writing file \"${path.unparsed}\" for ${options.name || 'unknown-source'}`), path);","        });","    }","};",""],"l":{"1":1,"35":0,"47":1,"49":0,"54":0,"55":0,"57":0,"58":0,"61":0,"62":0,"65":0,"66":0,"70":0,"73":0,"74":0,"75":0,"76":0,"80":0,"81":0,"87":0,"88":0}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/run/summary.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/run/summary.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0,0,0],"40":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"RunSummary","line":12,"loc":{"start":{"line":12,"column":13},"end":{"line":12,"column":52}}},"2":{"name":"(anonymous_2)","line":129,"loc":{"start":{"line":129,"column":29},"end":{"line":129,"column":57}}},"3":{"name":"(anonymous_3)","line":133,"loc":{"start":{"line":133,"column":33},"end":{"line":133,"column":51}}},"4":{"name":"(anonymous_4)","line":143,"loc":{"start":{"line":143,"column":30},"end":{"line":143,"column":48}}},"5":{"name":"(anonymous_5)","line":159,"loc":{"start":{"line":159,"column":29},"end":{"line":159,"column":47}}},"6":{"name":"(anonymous_6)","line":172,"loc":{"start":{"line":172,"column":32},"end":{"line":172,"column":50}}},"7":{"name":"(anonymous_7)","line":185,"loc":{"start":{"line":185,"column":26},"end":{"line":185,"column":54}}},"8":{"name":"(anonymous_8)","line":188,"loc":{"start":{"line":188,"column":28},"end":{"line":188,"column":40}}},"9":{"name":"(anonymous_9)","line":189,"loc":{"start":{"line":189,"column":33},"end":{"line":189,"column":45}}},"10":{"name":"(anonymous_10)","line":192,"loc":{"start":{"line":192,"column":27},"end":{"line":192,"column":42}}},"11":{"name":"(anonymous_11)","line":196,"loc":{"start":{"line":196,"column":29},"end":{"line":196,"column":57}}},"12":{"name":"(anonymous_12)","line":199,"loc":{"start":{"line":199,"column":37},"end":{"line":199,"column":62}}},"13":{"name":"(anonymous_13)","line":208,"loc":{"start":{"line":208,"column":54},"end":{"line":208,"column":66}}},"14":{"name":"(anonymous_14)","line":212,"loc":{"start":{"line":212,"column":29},"end":{"line":212,"column":44}}},"15":{"name":"(anonymous_15)","line":221,"loc":{"start":{"line":221,"column":26},"end":{"line":221,"column":54}}},"16":{"name":"(anonymous_16)","line":223,"loc":{"start":{"line":223,"column":30},"end":{"line":223,"column":48}}},"17":{"name":"(anonymous_17)","line":240,"loc":{"start":{"line":240,"column":27},"end":{"line":240,"column":55}}},"18":{"name":"(anonymous_18)","line":247,"loc":{"start":{"line":247,"column":33},"end":{"line":247,"column":50}}},"19":{"name":"(anonymous_19)","line":249,"loc":{"start":{"line":249,"column":30},"end":{"line":249,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":15}},"2":{"start":{"line":12,"column":0},"end":{"line":126,"column":2}},"3":{"start":{"line":14,"column":4},"end":{"line":14,"column":23}},"4":{"start":{"line":17,"column":4},"end":{"line":109,"column":7}},"5":{"start":{"line":112,"column":4},"end":{"line":112,"column":51}},"6":{"start":{"line":116,"column":4},"end":{"line":116,"column":54}},"7":{"start":{"line":119,"column":4},"end":{"line":119,"column":51}},"8":{"start":{"line":122,"column":4},"end":{"line":122,"column":52}},"9":{"start":{"line":125,"column":4},"end":{"line":125,"column":54}},"10":{"start":{"line":128,"column":0},"end":{"line":284,"column":3}},"11":{"start":{"line":130,"column":8},"end":{"line":131,"column":48}},"12":{"start":{"line":133,"column":8},"end":{"line":140,"column":11}},"13":{"start":{"line":134,"column":12},"end":{"line":134,"column":52}},"14":{"start":{"line":134,"column":43},"end":{"line":134,"column":50}},"15":{"start":{"line":136,"column":12},"end":{"line":139,"column":15}},"16":{"start":{"line":143,"column":8},"end":{"line":156,"column":11}},"17":{"start":{"line":144,"column":12},"end":{"line":144,"column":52}},"18":{"start":{"line":144,"column":43},"end":{"line":144,"column":50}},"19":{"start":{"line":146,"column":12},"end":{"line":146,"column":78}},"20":{"start":{"line":148,"column":12},"end":{"line":155,"column":16}},"21":{"start":{"line":159,"column":8},"end":{"line":169,"column":11}},"22":{"start":{"line":160,"column":12},"end":{"line":160,"column":52}},"23":{"start":{"line":160,"column":43},"end":{"line":160,"column":50}},"24":{"start":{"line":162,"column":12},"end":{"line":163,"column":72}},"25":{"start":{"line":166,"column":12},"end":{"line":168,"column":15}},"26":{"start":{"line":172,"column":8},"end":{"line":182,"column":11}},"27":{"start":{"line":173,"column":12},"end":{"line":173,"column":52}},"28":{"start":{"line":173,"column":43},"end":{"line":173,"column":50}},"29":{"start":{"line":175,"column":12},"end":{"line":175,"column":78}},"30":{"start":{"line":176,"column":12},"end":{"line":176,"column":39}},"31":{"start":{"line":176,"column":30},"end":{"line":176,"column":37}},"32":{"start":{"line":178,"column":12},"end":{"line":181,"column":15}},"33":{"start":{"line":188,"column":8},"end":{"line":188,"column":87}},"34":{"start":{"line":188,"column":42},"end":{"line":188,"column":83}},"35":{"start":{"line":189,"column":8},"end":{"line":191,"column":11}},"36":{"start":{"line":190,"column":12},"end":{"line":190,"column":55}},"37":{"start":{"line":192,"column":8},"end":{"line":194,"column":11}},"38":{"start":{"line":193,"column":12},"end":{"line":193,"column":41}},"39":{"start":{"line":199,"column":8},"end":{"line":218,"column":11}},"40":{"start":{"line":201,"column":12},"end":{"line":201,"column":37}},"41":{"start":{"line":204,"column":12},"end":{"line":204,"column":67}},"42":{"start":{"line":208,"column":12},"end":{"line":210,"column":15}},"43":{"start":{"line":209,"column":16},"end":{"line":209,"column":37}},"44":{"start":{"line":212,"column":12},"end":{"line":217,"column":15}},"45":{"start":{"line":214,"column":16},"end":{"line":214,"column":58}},"46":{"start":{"line":215,"column":16},"end":{"line":215,"column":45}},"47":{"start":{"line":216,"column":16},"end":{"line":216,"column":35}},"48":{"start":{"line":223,"column":8},"end":{"line":237,"column":11}},"49":{"start":{"line":224,"column":12},"end":{"line":224,"column":54}},"50":{"start":{"line":224,"column":45},"end":{"line":224,"column":52}},"51":{"start":{"line":226,"column":12},"end":{"line":229,"column":64}},"52":{"start":{"line":232,"column":12},"end":{"line":232,"column":98}},"53":{"start":{"line":235,"column":12},"end":{"line":236,"column":100}},"54":{"start":{"line":241,"column":8},"end":{"line":243,"column":25}},"55":{"start":{"line":247,"column":8},"end":{"line":282,"column":11}},"56":{"start":{"line":249,"column":12},"end":{"line":281,"column":15}},"57":{"start":{"line":250,"column":16},"end":{"line":250,"column":37}},"58":{"start":{"line":250,"column":28},"end":{"line":250,"column":35}},"59":{"start":{"line":252,"column":16},"end":{"line":253,"column":35}},"60":{"start":{"line":256,"column":16},"end":{"line":267,"column":17}},"61":{"start":{"line":257,"column":20},"end":{"line":257,"column":69}},"62":{"start":{"line":258,"column":20},"end":{"line":261,"column":21}},"63":{"start":{"line":259,"column":24},"end":{"line":259,"column":77}},"64":{"start":{"line":260,"column":24},"end":{"line":260,"column":109}},"65":{"start":{"line":264,"column":21},"end":{"line":267,"column":17}},"66":{"start":{"line":265,"column":20},"end":{"line":265,"column":79}},"67":{"start":{"line":266,"column":20},"end":{"line":266,"column":48}},"68":{"start":{"line":270,"column":16},"end":{"line":272,"column":17}},"69":{"start":{"line":271,"column":20},"end":{"line":271,"column":56}},"70":{"start":{"line":274,"column":16},"end":{"line":280,"column":19}},"71":{"start":{"line":286,"column":0},"end":{"line":286,"column":28}}},"branchMap":{"1":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":12},"end":{"line":134,"column":12}},{"start":{"line":134,"column":12},"end":{"line":134,"column":12}}]},"2":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":45},"end":{"line":136,"column":64}},{"start":{"line":136,"column":68},"end":{"line":136,"column":70}}]},"3":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":12},"end":{"line":144,"column":12}},{"start":{"line":144,"column":12},"end":{"line":144,"column":12}}]},"4":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":51},"end":{"line":146,"column":70}},{"start":{"line":146,"column":74},"end":{"line":146,"column":76}}]},"5":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":15},"end":{"line":153,"column":18}},{"start":{"line":153,"column":22},"end":{"line":155,"column":13}}]},"6":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":30},"end":{"line":154,"column":33}},{"start":{"line":154,"column":37},"end":{"line":154,"column":46}}]},"7":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":12},"end":{"line":160,"column":12}},{"start":{"line":160,"column":12},"end":{"line":160,"column":12}}]},"8":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":51},"end":{"line":162,"column":70}},{"start":{"line":162,"column":74},"end":{"line":162,"column":76}}]},"9":{"line":163,"type":"binary-expr","locations":[{"start":{"line":163,"column":28},"end":{"line":163,"column":29}},{"start":{"line":163,"column":33},"end":{"line":163,"column":40}},{"start":{"line":163,"column":45},"end":{"line":163,"column":70}}]},"10":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":12},"end":{"line":166,"column":15}},{"start":{"line":166,"column":20},"end":{"line":166,"column":29}},{"start":{"line":166,"column":33},"end":{"line":166,"column":42}},{"start":{"line":166,"column":47},"end":{"line":168,"column":14}}]},"11":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":48},"end":{"line":166,"column":68}},{"start":{"line":166,"column":73},"end":{"line":166,"column":98}}]},"12":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":12},"end":{"line":173,"column":12}},{"start":{"line":173,"column":12},"end":{"line":173,"column":12}}]},"13":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":51},"end":{"line":175,"column":70}},{"start":{"line":175,"column":74},"end":{"line":175,"column":76}}]},"14":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":12},"end":{"line":176,"column":12}},{"start":{"line":176,"column":12},"end":{"line":176,"column":12}}]},"15":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":13},"end":{"line":178,"column":33}},{"start":{"line":178,"column":38},"end":{"line":178,"column":63}}]},"16":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":23},"end":{"line":180,"column":26}},{"start":{"line":180,"column":30},"end":{"line":180,"column":39}}]},"17":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":12},"end":{"line":193,"column":15}},{"start":{"line":193,"column":20},"end":{"line":193,"column":39}}]},"18":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":16},"end":{"line":214,"column":31}},{"start":{"line":214,"column":36},"end":{"line":214,"column":56}}]},"19":{"line":215,"type":"binary-expr","locations":[{"start":{"line":215,"column":16},"end":{"line":215,"column":19}},{"start":{"line":215,"column":24},"end":{"line":215,"column":43}}]},"20":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":12},"end":{"line":224,"column":12}},{"start":{"line":224,"column":12},"end":{"line":224,"column":12}}]},"21":{"line":224,"type":"binary-expr","locations":[{"start":{"line":224,"column":16},"end":{"line":224,"column":19}},{"start":{"line":224,"column":23},"end":{"line":224,"column":41}}]},"22":{"line":224,"type":"binary-expr","locations":[{"start":{"line":224,"column":25},"end":{"line":224,"column":26}},{"start":{"line":224,"column":30},"end":{"line":224,"column":40}}]},"23":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":23},"end":{"line":226,"column":52}},{"start":{"line":226,"column":56},"end":{"line":226,"column":73}}]},"24":{"line":232,"type":"binary-expr","locations":[{"start":{"line":232,"column":12},"end":{"line":232,"column":16}},{"start":{"line":232,"column":21},"end":{"line":232,"column":96}}]},"25":{"line":232,"type":"binary-expr","locations":[{"start":{"line":232,"column":61},"end":{"line":232,"column":70}},{"start":{"line":232,"column":74},"end":{"line":232,"column":90}},{"start":{"line":232,"column":94},"end":{"line":232,"column":95}}]},"26":{"line":235,"type":"binary-expr","locations":[{"start":{"line":235,"column":12},"end":{"line":235,"column":16}},{"start":{"line":235,"column":21},"end":{"line":236,"column":98}}]},"27":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":16},"end":{"line":250,"column":16}},{"start":{"line":250,"column":16},"end":{"line":250,"column":16}}]},"28":{"line":252,"type":"binary-expr","locations":[{"start":{"line":252,"column":27},"end":{"line":252,"column":28}},{"start":{"line":252,"column":32},"end":{"line":252,"column":38}}]},"29":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":16},"end":{"line":256,"column":16}},{"start":{"line":256,"column":16},"end":{"line":256,"column":16}}]},"30":{"line":257,"type":"binary-expr","locations":[{"start":{"line":257,"column":20},"end":{"line":257,"column":27}},{"start":{"line":257,"column":32},"end":{"line":257,"column":67}}]},"31":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":20},"end":{"line":258,"column":20}},{"start":{"line":258,"column":20},"end":{"line":258,"column":20}}]},"32":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":24},"end":{"line":258,"column":38}},{"start":{"line":258,"column":42},"end":{"line":258,"column":59}},{"start":{"line":258,"column":63},"end":{"line":258,"column":91}}]},"33":{"line":260,"type":"binary-expr","locations":[{"start":{"line":260,"column":24},"end":{"line":260,"column":54}},{"start":{"line":260,"column":59},"end":{"line":260,"column":107}}]},"34":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":21},"end":{"line":264,"column":21}},{"start":{"line":264,"column":21},"end":{"line":264,"column":21}}]},"35":{"line":265,"type":"binary-expr","locations":[{"start":{"line":265,"column":20},"end":{"line":265,"column":39}},{"start":{"line":265,"column":44},"end":{"line":265,"column":77}}]},"36":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":16},"end":{"line":270,"column":16}},{"start":{"line":270,"column":16},"end":{"line":270,"column":16}}]},"37":{"line":270,"type":"binary-expr","locations":[{"start":{"line":270,"column":20},"end":{"line":270,"column":29}},{"start":{"line":270,"column":33},"end":{"line":270,"column":48}}]},"38":{"line":277,"type":"binary-expr","locations":[{"start":{"line":277,"column":28},"end":{"line":277,"column":32}},{"start":{"line":277,"column":36},"end":{"line":277,"column":45}}]},"39":{"line":278,"type":"binary-expr","locations":[{"start":{"line":278,"column":28},"end":{"line":278,"column":32}},{"start":{"line":278,"column":36},"end":{"line":278,"column":49}},{"start":{"line":278,"column":53},"end":{"line":278,"column":75}},{"start":{"line":278,"column":79},"end":{"line":278,"column":88}}]},"40":{"line":279,"type":"binary-expr","locations":[{"start":{"line":279,"column":28},"end":{"line":279,"column":36}},{"start":{"line":279,"column":40},"end":{"line":279,"column":42}}]}},"code":["var _ = require('lodash'),","    SerialiseError = require('serialised-error'),","    RunSummary;","","/**"," * Creates and returns a RunSummary instance for the current collection run."," *"," * @constructor"," * @param {EventEmitter} emitter - An EventEmitter instance with event handler attachments to add run information to."," * @param {Object} options - A set of run summary creation options."," */","RunSummary = function RunSummary (emitter, options) {","    // keep a copy of this instance since, we need to refer to this from various events","    var summary = this;","","    // and store the trackers and failures in the summary object itself","    _.assign(summary, /** @lends RunSummary.prototype */ {","        /**","         * The collection that is being executed.","         *","         * @type {Collection}","         */","        collection: _.get(options, 'collection'),","","        /**","         * The environment that is being used during the run","         * @type {VariableScope}","         *","         */","        environment: _.get(options, 'environment'),","","        /**","         * Global variables being used during the run","         * @type {VariableScope}","         */","        globals: _.get(options, 'globals'),","","        /**","         * Holds information related to the run.","         */","        run: {","            /**","             * Holds the statistics of the run. Each property in it is the item being tracked and has three numeric","             * properties - total, failed, pending","             *","             * @type {Object.<Object>}","             */","            stats: {","                iterations: {},","                items: {},","                scripts: {},","                prerequests: {},","                requests: {},","                tests: {},","                assertions: {},","                testScripts: {},","                prerequestScripts: {}","            },","","            /**","             * Stores all generic timing information","             *","             * @type {Object}","             */","            timings: {","                /**","                 * The average response time of the run","                 *","                 * @type {number}","                 */","                responseAverage: 0","            },","","            /**","             * Stores detailed information about the order of execution, request, response and assertions","             *","             * @type {Array<Object>}","             */","            executions: [],","","            /**","             * Stores information on data transfer made during the collection","             *","             * @type {Object}","             */","            transfers: {","                /**","                 * The total data received as response to every request","                 *","                 * @type {number}","                 */","                responseTotal: 0","            },","","            /**","             * An array of all errors encountered during the run","             *","             * @type {Array.<Error>}","             */","            failures: [],","","            /**","             * This stores any fatal error during the run that caused the run to abort prematurely.","             *","             * @type {Error}","             */","            error: null","        }","    });","","    // track run timings (start and end)","    RunSummary.attachTimingTrackers(this, emitter);","","    // accumulate statistics on all event","    // for all types of events track the counters for the event and its corresponding \"before\" counterpart","    RunSummary.attachStatisticTrackers(this, emitter);","","    // accumulate statistics on requests - such as size and time","    RunSummary.attachRequestTracker(this, emitter);","","    // accumulate errors (failures) from all events","    RunSummary.attachFailureTrackers(this, emitter);","","    // accumulate all execution specific data in collection","    RunSummary.attachReportingTrackers(this, emitter);","};","","_.assign(RunSummary, {","    attachReportingTrackers: function (summary, emitter) {","        var cache = {},","            executions = summary.run.executions;","","        emitter.on('beforeItem', function (err, o) {","            if (!_.get(o, 'cursor.ref')) { return; }","","            cache[o.cursor.ref] = _.assignIn(cache[o.cursor.ref] || {}, {","                cursor: o.cursor,","                item: o.item","            });","        });","","        // save all responses in executions array","        emitter.on('request', function (err, o) {","            if (!_.get(o, 'cursor.ref')) { return; }","","            var execution = cache[o.cursor.ref] = (cache[o.cursor.ref] || {});","","            executions.push(_.assignIn(execution, {","                cursor: o.cursor,","                request: o.request,","                response: _.omit(o.response, 'stream'),","                id: _.get(o, 'item.id')","            }, err && {","                requestError: err || undefined","            }));","        });","","        // save all script execution errors in each execution","        emitter.on('script', function (err, o) {","            if (!_.get(o, 'cursor.ref')) { return; }","","            var execution = cache[o.cursor.ref] = (cache[o.cursor.ref] || {}),","                eventName = o && o.event && (o.event.listen + 'Script');","","            // store the script error corresponding to the script event name","            err && (execution && eventName) && (execution[eventName] || (execution[eventName] = [])).push({","                error: err","            });","        });","","        // save all assertions in each execution","        emitter.on('assertion', function (err, o) {","            if (!_.get(o, 'cursor.ref')) { return; }","","            var execution = cache[o.cursor.ref] = (cache[o.cursor.ref] || {});","            if (!execution) { return; }","","            (execution.assertions || (execution.assertions = [])).push({","                assertion: o.assertion,","                error: err || undefined","            });","        });","    },","","    attachTimingTrackers: function (summary, emitter) {","        // mark the point when the run started","        // also mark the point when run completed and also store error if needed","        emitter.on('start', function () { summary.run.timings.started = Date.now(); });","        emitter.on('beforeDone', function () {","            summary.run.timings.completed = Date.now();","        });","        emitter.on('done', function (err) {","            err && (summary.error = err);","        });","    },","    attachStatisticTrackers: function (summary, emitter) {","        // accumulate statistics on all event","        // for all types of events track the counters for the event and its corresponding \"before\" counterpart","        _.forEach(summary.run.stats, function (tracker, name) {","            // the actual event names are singular than their plural trackers, so we make the name singular","            name = name.slice(0, -1); // remove last character","","            // populate initial values of trackers","            _.assign(tracker, { total: 0, pending: 0, failed: 0 });","","            // Set up common listeners for a set of events, which tracks how many times they were executed and records","            // the ones which had an error passed as first argument","            emitter.on(_.camelCase('before-' + name), function () {","                tracker.pending += 1;","            });","","            emitter.on(name, function (err) {","                // check pending so that, it does not negate for items that do not have a `before` counterpart","                tracker.pending && (tracker.pending -= 1);","                err && (tracker.failed += 1);","                tracker.total += 1;","            });","        });","    },","","    attachRequestTracker: function (summary, emitter) {","        // accumulate statistics on requests","        emitter.on('request', function (err, o) {","            if (err || !(o && o.response)) { return; }","","            var size = _.isFunction(o.response.size) && o.response.size(),","                time = o.response.responseTime,","","                requestCount = summary.run.stats.requests.total;","","            // compute the response size total","            size && (summary.run.transfers.responseTotal += (size.body || 0 + size.headers || 0));","","            // compute average response time","            time && (summary.run.timings.responseAverage =","                ((summary.run.timings.responseAverage * (requestCount - 1) + time) / requestCount));","        });","    },","","    attachFailureTrackers: function (summary, emitter) {","        var eventsToTrack = ['beforeIteration', 'iteration', 'beforeItem', 'item', 'beforeScript', 'script',","            'beforePrerequest', 'prerequest', 'beforeRequest', 'request', 'beforeTest', 'test', 'beforeAssertion',","            'assertion'];","","        // accumulate failures of all events","        // NOTE that surrogate events (which throw duplicate arguments) are not recorded","        _.forEach(eventsToTrack, function (event) {","            // push failures sent from \"before\" events","            emitter.on(event, function (err, o) {","                if (!err) { return; }","","                var item = o && o.item,","                    source = event;","","                // in case of user script error, point to the line and column of the script and its type","                if (event === 'script') {","                    o.event && (source = o.event.listen + '-script');","                    if (err.stacktrace && err.stacktrace[0] && err.stacktrace[0].lineNumber) {","                        source += (':' + (err.stacktrace[0].lineNumber - 2));","                        err.stacktrace[0].columnNumber && (source += (':' + err.stacktrace[0].columnNumber));","                    }","                }","                // assertion errors need to know which assertion in the test was this","                else if (event === 'assertion') {","                    _.has(err, 'index') && (source += (':' + (err.index + 1)));","                    source += ' in test-script';","                }","","                // if this is a plain error, convert it to serialised error","                if (err.stack && !err.stacktrace) {","                    err = new SerialiseError(err, true);","                }","","                summary.run.failures.push({","                    error: err,","                    at: source,","                    source: item || undefined,","                    parent: item && item.__parent && item.__parent.__parent || undefined,","                    cursor: o.cursor || {}","                });","            });","        });","    }","});","","module.exports = RunSummary;",""],"l":{"1":1,"12":1,"14":0,"17":0,"112":0,"116":0,"119":0,"122":0,"125":0,"128":1,"130":0,"133":0,"134":0,"136":0,"143":0,"144":0,"146":0,"148":0,"159":0,"160":0,"162":0,"166":0,"172":0,"173":0,"175":0,"176":0,"178":0,"188":0,"189":0,"190":0,"192":0,"193":0,"199":0,"201":0,"204":0,"208":0,"209":0,"212":0,"214":0,"215":0,"216":0,"223":0,"224":0,"226":0,"232":0,"235":0,"241":0,"247":0,"249":0,"250":0,"252":0,"256":0,"257":0,"258":0,"259":0,"260":0,"264":0,"265":0,"266":0,"270":0,"271":0,"274":0,"286":1}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/run/options.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/run/options.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":43,"loc":{"start":{"line":43,"column":19},"end":{"line":43,"column":43}}},"2":{"name":"(anonymous_2)","line":65,"loc":{"start":{"line":65,"column":21},"end":{"line":65,"column":51}}},"3":{"name":"(anonymous_3)","line":66,"loc":{"start":{"line":66,"column":63},"end":{"line":66,"column":84}}},"4":{"name":"(anonymous_4)","line":81,"loc":{"start":{"line":81,"column":24},"end":{"line":81,"column":56}}},"5":{"name":"(anonymous_5)","line":94,"loc":{"start":{"line":94,"column":17},"end":{"line":94,"column":50}}},"6":{"name":"(anonymous_6)","line":95,"loc":{"start":{"line":95,"column":19},"end":{"line":95,"column":41}}},"7":{"name":"(anonymous_7)","line":126,"loc":{"start":{"line":126,"column":20},"end":{"line":126,"column":47}}},"8":{"name":"(anonymous_8)","line":135,"loc":{"start":{"line":135,"column":23},"end":{"line":135,"column":50}}},"9":{"name":"(anonymous_9)","line":161,"loc":{"start":{"line":161,"column":48},"end":{"line":161,"column":69}}},"10":{"name":"(anonymous_10)","line":194,"loc":{"start":{"line":194,"column":23},"end":{"line":194,"column":53}}},"11":{"name":"(anonymous_11)","line":197,"loc":{"start":{"line":197,"column":33},"end":{"line":197,"column":54}}},"12":{"name":"(anonymous_12)","line":238,"loc":{"start":{"line":238,"column":17},"end":{"line":238,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":229,"column":6}},"2":{"start":{"line":44,"column":8},"end":{"line":44,"column":40}},"3":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"4":{"start":{"line":46,"column":12},"end":{"line":46,"column":29}},"5":{"start":{"line":50,"column":8},"end":{"line":50,"column":78}},"6":{"start":{"line":54,"column":8},"end":{"line":54,"column":22}},"7":{"start":{"line":66,"column":8},"end":{"line":71,"column":52}},"8":{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},"9":{"start":{"line":68,"column":16},"end":{"line":68,"column":31}},"10":{"start":{"line":70,"column":12},"end":{"line":70,"column":54}},"11":{"start":{"line":82,"column":8},"end":{"line":83,"column":39}},"12":{"start":{"line":95,"column":8},"end":{"line":103,"column":10}},"13":{"start":{"line":96,"column":12},"end":{"line":96,"column":46}},"14":{"start":{"line":96,"column":23},"end":{"line":96,"column":44}},"15":{"start":{"line":98,"column":12},"end":{"line":100,"column":13}},"16":{"start":{"line":99,"column":16},"end":{"line":99,"column":66}},"17":{"start":{"line":102,"column":12},"end":{"line":102,"column":109}},"18":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"19":{"start":{"line":106,"column":12},"end":{"line":106,"column":37}},"20":{"start":{"line":109,"column":8},"end":{"line":109,"column":42}},"21":{"start":{"line":135,"column":12},"end":{"line":154,"column":14}},"22":{"start":{"line":136,"column":16},"end":{"line":138,"column":17}},"23":{"start":{"line":137,"column":20},"end":{"line":137,"column":41}},"24":{"start":{"line":141,"column":16},"end":{"line":143,"column":17}},"25":{"start":{"line":142,"column":20},"end":{"line":142,"column":78}},"26":{"start":{"line":147,"column":16},"end":{"line":151,"column":54}},"27":{"start":{"line":153,"column":16},"end":{"line":153,"column":43}},"28":{"start":{"line":157,"column":12},"end":{"line":159,"column":13}},"29":{"start":{"line":158,"column":16},"end":{"line":158,"column":54}},"30":{"start":{"line":161,"column":12},"end":{"line":169,"column":15}},"31":{"start":{"line":162,"column":16},"end":{"line":164,"column":17}},"32":{"start":{"line":163,"column":20},"end":{"line":163,"column":37}},"33":{"start":{"line":165,"column":16},"end":{"line":167,"column":17}},"34":{"start":{"line":166,"column":20},"end":{"line":166,"column":74}},"35":{"start":{"line":168,"column":16},"end":{"line":168,"column":53}},"36":{"start":{"line":195,"column":12},"end":{"line":195,"column":73}},"37":{"start":{"line":195,"column":39},"end":{"line":195,"column":71}},"38":{"start":{"line":197,"column":12},"end":{"line":227,"column":15}},"39":{"start":{"line":198,"column":16},"end":{"line":200,"column":17}},"40":{"start":{"line":199,"column":20},"end":{"line":199,"column":41}},"41":{"start":{"line":203,"column":16},"end":{"line":226,"column":19}},"42":{"start":{"line":205,"column":24},"end":{"line":210,"column":25}},"43":{"start":{"line":206,"column":28},"end":{"line":206,"column":61}},"44":{"start":{"line":209,"column":28},"end":{"line":209,"column":55}},"45":{"start":{"line":213,"column":24},"end":{"line":215,"column":25}},"46":{"start":{"line":214,"column":28},"end":{"line":214,"column":50}},"47":{"start":{"line":217,"column":24},"end":{"line":217,"column":76}},"48":{"start":{"line":220,"column":20},"end":{"line":223,"column":21}},"49":{"start":{"line":222,"column":24},"end":{"line":222,"column":45}},"50":{"start":{"line":225,"column":20},"end":{"line":225,"column":43}},"51":{"start":{"line":238,"column":0},"end":{"line":240,"column":2}},"52":{"start":{"line":239,"column":4},"end":{"line":239,"column":78}}},"branchMap":{"1":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":17},"end":{"line":44,"column":29}},{"start":{"line":44,"column":33},"end":{"line":44,"column":39}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"3":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":22}},{"start":{"line":50,"column":26},"end":{"line":50,"column":50}},{"start":{"line":50,"column":55},"end":{"line":50,"column":76}}]},"4":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":38},"end":{"line":71,"column":10}},{"start":{"line":71,"column":13},"end":{"line":71,"column":51}}]},"5":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":12}},{"start":{"line":67,"column":12},"end":{"line":67,"column":12}}]},"6":{"line":82,"type":"cond-expr","locations":[{"start":{"line":82,"column":46},"end":{"line":82,"column":118}},{"start":{"line":83,"column":12},"end":{"line":83,"column":38}}]},"7":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":12},"end":{"line":96,"column":12}},{"start":{"line":96,"column":12},"end":{"line":96,"column":12}}]},"8":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":12},"end":{"line":98,"column":12}},{"start":{"line":98,"column":12},"end":{"line":98,"column":12}}]},"9":{"line":102,"type":"cond-expr","locations":[{"start":{"line":102,"column":84},"end":{"line":102,"column":98}},{"start":{"line":102,"column":101},"end":{"line":102,"column":106}}]},"10":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":8}},{"start":{"line":105,"column":8},"end":{"line":105,"column":8}}]},"11":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":16},"end":{"line":136,"column":16}},{"start":{"line":136,"column":16},"end":{"line":136,"column":16}}]},"12":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":16},"end":{"line":141,"column":16}},{"start":{"line":141,"column":16},"end":{"line":141,"column":16}}]},"13":{"line":147,"type":"cond-expr","locations":[{"start":{"line":151,"column":20},"end":{"line":151,"column":39}},{"start":{"line":151,"column":42},"end":{"line":151,"column":52}}]},"14":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":12},"end":{"line":157,"column":12}},{"start":{"line":157,"column":12},"end":{"line":157,"column":12}}]},"15":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":16},"end":{"line":162,"column":16}},{"start":{"line":162,"column":16},"end":{"line":162,"column":16}}]},"16":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":16},"end":{"line":165,"column":16}},{"start":{"line":165,"column":16},"end":{"line":165,"column":16}}]},"17":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":12},"end":{"line":195,"column":12}},{"start":{"line":195,"column":12},"end":{"line":195,"column":12}}]},"18":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":16},"end":{"line":198,"column":16}},{"start":{"line":198,"column":16},"end":{"line":198,"column":16}}]},"19":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":24},"end":{"line":213,"column":24}},{"start":{"line":213,"column":24},"end":{"line":213,"column":24}}]},"20":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":20},"end":{"line":220,"column":20}},{"start":{"line":220,"column":20},"end":{"line":220,"column":20}}]}},"code":["var _ = require('lodash'),","    async = require('async'),","    transformer = require('postman-collection-transformer'),","    Collection = require('postman-collection').Collection,","    VariableScope = require('postman-collection').VariableScope,","    parseJson = require('parse-json'),","    parseCsv = require('csv-parse'),","    util = require('../util'),","    config = require('../config'),","","    /**","     * The message displayed when the specified collection file can't be loaded.","     *","     * @const","     * @type {String}","     */","    COLLECTION_LOAD_ERROR_MESSAGE = 'newman: collection could not be loaded',","","    /**","     * The message displayed when the specified environment or globals file can't be loaded.","     *","     * @const","     * @type {String}","     */","    LOAD_ERROR_MESSAGE = 'newman: could not load ',","","    /**","     * The set of postman collection transformer options, to convert collection v1 to collection v2.","     *","     * @const","     * @type {Object}","     */","    COLLECTION_TRANSFORMER_OPTION = { inputVersion: '1.0.0', outputVersion: '2.0.0' },","","    /**","     * Accepts an object, and extracts the property inside an object which is supposed to contain the required data.","     * In case of variables, it also extracts them into plain JS objects.","     *","     * @param {Object} source - The source wrapper object that may or may not contain inner wrapped properties.","     * @param {String} type - \"environment\" or \"globals\", etc.","     * @returns {Object} - The object representation of the current extracted property.","     */","    extractModel = function (source, type) {","        source = source[type] || source; // extract object that holds variable. these usually come from cloud API","        if (!_.isObject(source)) {","            return undefined;","        }","","        // ensure we un-box the JSON if it comes from cloud-api or similar sources","        !source.values && _.isObject(source[type]) && (source = source[type]);","","        // we ensure that environment passed as array is converted to plain object. runtime does this too, but we do it","        // here for consistency of options passed to reporters","        return source;","    },","","    /**","     * Loads the given data of type from a specified external location","     *","     * @param {String} type - The type of data to load.","     * @param {String} location - The location to load from (file path or URL).","     * @param {function} cb - The callback function whose invocation marks the end of the external load routine.","     * @returns {*}","     */","    externalLoader = function (type, location, cb) {","        return _.isString(location) ? util.fetchJson(location, function (err, data) {","            if (err) {","                return cb(err);","            }","            return cb(null, extractModel(data, type));","        }) : cb(null, extractModel(location, type));","    },","","    /**","     * A helper method to process a collection and convert it to a V2 equivalent if necessary, and return it.","     *","     * @param {Object} collection The input collection, specified as a JSON object.","     * @param {Function} callback A handler function that consumes an error object and the processed collection.","     * @returns {*|Function} -","     */","    processCollection = function (collection, callback) {","        return transformer.isv1(collection) ? transformer.convert(collection, COLLECTION_TRANSFORMER_OPTION, callback) :","            callback(null, collection);","    },","","    /**","     * Helper function that manages the load of environments and globals","     * @private","     *","     * @param {String} type","     * @param {String|Object} value","     * @param {Function} callback","     */","    loadScopes = function (type, value, callback) {","        var done = function (err, scope) {","            if (err) { return callback(err); }","","            if (!_.isObject(scope)) {","                return done(new Error(LOAD_ERROR_MESSAGE + type));","            }","","            callback(null, new VariableScope(VariableScope.isVariableScope(scope) ? scope.toJSON() : scope));","        };","","        if (_.isObject(value)) {","            return done(null, value);","        }","","        externalLoader(type, value, done);","    },","","    /**","     * Custom configuration loaders for the required configuration keys.","     *","     * @type {Object}","     */","    configLoaders = {","","        /**","         * The collection file load helper for the current run.","         *","         * @param {Object|String} value - The collection, specified as a JSON object, or the path to it's file.","         * @param {Function} callback - The callback function invoked to mark the end of the collection load routine.","         * @return {*}","         */","        collection: function (value, callback) {","","            /**","             * The post collection load handler.","             *","             * @param {?Error} err - An Error instance / null, passed from the collection loader.","             * @param {Object} collection - The collection / raw JSON object, passed from the collection loader.","             * @returns {*}","             */","            var done = function (err, collection) {","                if (err) {","                    return callback(err);","                }","","                // ensure that the collection option is present before starting a run","                if (!_.isObject(collection)) {","                    return callback(new Error(COLLECTION_LOAD_ERROR_MESSAGE));","                }","","                // ensure that the collection reference is an SDK instance","                // @todo - should this be handled by config loaders?","                collection = new Collection(Collection.isCollection(collection) ?","                    // if the option contain an instance of collection, we simply clone it for future use","                    // create a collection in case it is not one. user can send v2 JSON as a source and that will be","                    // converted to a collection","                    collection.toJSON() : collection);","","                callback(null, collection);","            };","","            // if the collection has been specified as an object, convert to V2 if necessary and return the result","            if (_.isObject(value)) {","                return processCollection(value, done);","            }","","            externalLoader('collection', value, function (err, data) {","                if (err) {","                    return done(err);","                }","                if (!_.isObject(data)) {","                    return done(new Error(COLLECTION_LOAD_ERROR_MESSAGE));","                }","                return processCollection(data, done);","            });","        },","","        /**","         * The environment configuration object, loaded for the current collection run.","         *","         * @type {Object}","         */","        environment: loadScopes.bind(this, 'environment'),","","        /**","         * The object of globals, loaded for the collection run.","         *","         * @type {Object}","         */","        globals: loadScopes.bind(this, 'globals'),","","        /**","         * The iterationData loader module, with support for JSON or CSV data files.","         *","         * @param {String|Object[]} location - The path to the iteration data file for the current collectio run, or","         * the array of iteration data objects.","         * @param {Function} callback - The function invoked to indicate the end of the iteration data loading routine.","         * @returns {*}","         */","        iterationData: function (location, callback) {","            if (_.isArray(location)) { return callback(null, location); }","","            util.fetch(location, function (err, data) {","                if (err) {","                    return callback(err);","                }","","                // Try loading as a JSON, fallback to CSV. @todo: switch to file extension based loading.","                async.waterfall([","                    (cb) => {","                        try {","                            return cb(null, parseJson(data));","                        }","                        catch (e) {","                            return cb(null, undefined); // e masked to avoid displaying JSON parse errors for CSV files","                        }","                    },","                    (json, cb) => {","                        if (json) {","                            return cb(null, json);","                        }","                        // Wasn't JSON","                        parseCsv(data, { columns: true, escape: '\\\\' }, cb);","                    }","                ], (err, parsed) => {","                    if (err) {","                        // todo: Log meaningful stuff here","                        return callback(err);","                    }","","                    callback(null, parsed);","                });","            });","        }","    };","","/**"," * The helper function to load all file based information for the current collection run."," *"," * @param {Object} options - The set of generic collection run options."," * @param {Function} callback - The function called to mark the completion of the configuration load routine."," * @returns {*}"," */","module.exports = function (options, callback) {","    config.get(options, { loaders: configLoaders, command: 'run' }, callback);","};",""],"l":{"1":1,"44":0,"45":0,"46":0,"50":0,"54":0,"66":0,"67":0,"68":0,"70":0,"82":0,"95":0,"96":0,"98":0,"99":0,"102":0,"105":0,"106":0,"109":0,"135":0,"136":0,"137":0,"141":0,"142":0,"147":0,"153":0,"157":0,"158":0,"161":0,"162":0,"163":0,"165":0,"166":0,"168":0,"195":0,"197":0,"198":0,"199":0,"203":0,"205":0,"206":0,"209":0,"213":0,"214":0,"217":0,"220":0,"222":0,"225":0,"238":1,"239":0}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/config/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/config/index.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5,"column":34}},"2":{"start":{"line":21,"column":0},"end":{"line":61,"column":2}},"3":{"start":{"line":22,"column":4},"end":{"line":22,"column":77}},"4":{"start":{"line":24,"column":4},"end":{"line":24,"column":34}},"5":{"start":{"line":25,"column":4},"end":{"line":60,"column":7}},"6":{"start":{"line":28,"column":12},"end":{"line":28,"column":32}},"7":{"start":{"line":32,"column":12},"end":{"line":32,"column":89}},"8":{"start":{"line":33,"column":12},"end":{"line":33,"column":95}},"9":{"start":{"line":36,"column":8},"end":{"line":38,"column":9}},"10":{"start":{"line":37,"column":12},"end":{"line":37,"column":33}},"11":{"start":{"line":40,"column":8},"end":{"line":43,"column":11}},"12":{"start":{"line":42,"column":12},"end":{"line":42,"column":53}},"13":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"14":{"start":{"line":46,"column":12},"end":{"line":46,"column":43}},"15":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":37}},"17":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"18":{"start":{"line":54,"column":12},"end":{"line":54,"column":33}},"19":{"start":{"line":57,"column":8},"end":{"line":59,"column":21}},"20":{"start":{"line":58,"column":12},"end":{"line":58,"column":103}}},"branchMap":{"1":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":13}},{"start":{"line":22,"column":17},"end":{"line":22,"column":38}},{"start":{"line":22,"column":43},"end":{"line":22,"column":75}}]},"2":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":32},"end":{"line":27,"column":43}},{"start":{"line":27,"column":46},"end":{"line":29,"column":9}}]},"3":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":12},"end":{"line":32,"column":40}},{"start":{"line":32,"column":45},"end":{"line":32,"column":87}}]},"4":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":84},"end":{"line":33,"column":86}},{"start":{"line":33,"column":89},"end":{"line":33,"column":92}}]},"5":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":8}},{"start":{"line":36,"column":8},"end":{"line":36,"column":8}}]},"6":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":36},"end":{"line":42,"column":40}},{"start":{"line":42,"column":43},"end":{"line":42,"column":52}}]},"7":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"8":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":8}},{"start":{"line":49,"column":8},"end":{"line":49,"column":8}}]},"9":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":8}},{"start":{"line":53,"column":8},"end":{"line":53,"column":8}}]},"10":{"line":58,"type":"cond-expr","locations":[{"start":{"line":58,"column":60},"end":{"line":58,"column":84}},{"start":{"line":58,"column":87},"end":{"line":58,"column":102}}]},"11":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":20},"end":{"line":58,"column":25}},{"start":{"line":58,"column":29},"end":{"line":58,"column":56}}]}},"code":["var _ = require('lodash'),","    async = require('async'),","","    env = require('./process-env'),","    rcfile = require('./rc-file');","","/**"," * Reads configuration from config file, environment variables and CLI arguments. The CLI arguments override environment"," * variables and environment variables override the configuration read from a file."," *"," * @param {Object} overrides - Configuration overrides (these usually come from the CLI)."," * @param {Object} options - The wrapper object of settings used for selective configuration loading."," * @param {String} options.command - Command name. Used for loading the required options from the config file."," * @param {Boolean=} options.ignoreRcFile - If true, the RC file is ignored."," * @param {Boolean=} options.ignoreProcessEnvironment - If true, the process environment variables are ignored."," * @param {Object=} options.loaders - Custom loaders for specific configuration options."," * @param {Function} callback - Is called after merging values from the overrides with the values from the rc file and"," * environment variables."," * @returns {*}"," */","module.exports.get = (overrides, options, callback) => {","    !callback && _.isFunction(options) && (callback = options, options = {});","","    var loaders = options.loaders;","    async.waterfall([","        // Load RC Files.","        !options.ignoreRcFile ? rcfile.load : (cb) => {","            return cb(null, {});","        },","        // Load Process Environment overrides","        (fileOptions, cb) => {","            fileOptions[options.command] && (fileOptions = fileOptions[options.command]);","            return cb(null, _.merge(fileOptions, options.ignoreProcessEnvironment ? {} : env));","        }","    ], (err, options) => {","        if (err) {","            return callback(err);","        }","","        options = _.mergeWith({}, options, overrides, (dest, src) => {","            // If the newer value is a null, do not override it.","            return (src === null) ? dest : undefined;","        });","","        if (_.isEmpty(loaders)) {","            return callback(null, options);","        }","        // sanitize environment option","        if (!options.environment) {","            options.environment = {};","        }","        // sanitize globals option","        if (!options.globals) {","            options.globals = {};","        }","","        async.mapValues(options, (value, name, cb) => {","            return (value && _.isFunction(loaders[name])) ? loaders[name](value, cb) : cb(null, value);","        }, callback);","    });","};",""],"l":{"1":1,"21":1,"22":0,"24":0,"25":0,"28":0,"32":0,"33":0,"36":0,"37":0,"40":0,"42":0,"45":0,"46":0,"49":0,"50":0,"53":0,"54":0,"57":0,"58":0}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/config/process-env.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/config/process-env.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":19}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}}},"branchMap":{},"code":["var envConfig = {}; // todo: read NEWMAN_* variables from process.env","","module.exports = envConfig;",""],"l":{"1":1,"3":1}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/config/rc-file.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/config/rc-file.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":19,"column":27}},"2":{"start":{"line":27,"column":0},"end":{"line":57,"column":2}},"3":{"start":{"line":28,"column":4},"end":{"line":31,"column":25}},"4":{"start":{"line":33,"column":4},"end":{"line":33,"column":59}},"5":{"start":{"line":34,"column":4},"end":{"line":34,"column":78}},"6":{"start":{"line":35,"column":4},"end":{"line":35,"column":76}},"7":{"start":{"line":37,"column":4},"end":{"line":56,"column":7}},"8":{"start":{"line":38,"column":8},"end":{"line":49,"column":11}},"9":{"start":{"line":39,"column":12},"end":{"line":41,"column":13}},"10":{"start":{"line":40,"column":16},"end":{"line":40,"column":36}},"11":{"start":{"line":42,"column":12},"end":{"line":42,"column":62}},"12":{"start":{"line":43,"column":12},"end":{"line":48,"column":13}},"13":{"start":{"line":44,"column":16},"end":{"line":44,"column":49}},"14":{"start":{"line":47,"column":16},"end":{"line":47,"column":90}},"15":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"16":{"start":{"line":52,"column":12},"end":{"line":52,"column":33}},"17":{"start":{"line":55,"column":8},"end":{"line":55,"column":58}}},"branchMap":{"1":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":23},"end":{"line":29,"column":46}},{"start":{"line":29,"column":49},"end":{"line":29,"column":65}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":8}},{"start":{"line":34,"column":12},"end":{"line":34,"column":77}}]},"3":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":10}},{"start":{"line":35,"column":14},"end":{"line":35,"column":75}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":12}},{"start":{"line":39,"column":12},"end":{"line":39,"column":12}}]},"5":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":12},"end":{"line":42,"column":16}},{"start":{"line":42,"column":20},"end":{"line":42,"column":33}},{"start":{"line":42,"column":38},"end":{"line":42,"column":60}}]},"6":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":8}},{"start":{"line":51,"column":8},"end":{"line":51,"column":8}}]}},"code":["var _ = require('lodash'),","    fs = require('fs'),","    join = require('path').join,","    async = require('async'),","    parseJson = require('parse-json'),","","    /**","     * Name of the directory that contains the file denoted by FILE_NAME.","     *","     * @type {String}","     */","    POSTMAN_CONFIG_DIR = 'postman',","","    /**","     * Name of the file that contains Newman compliant confguration information.","     *","     * @type {String}","     */","    FILE_NAME = 'newmanrc';","","/**"," * Configuration loader to acquire run settings from a file present in the home directory: POSTMAN_CONFIG_DIR/FILE_NAME."," *"," * @param {Function} callback - The callback function invoked to mark the completion of the config loading routine."," * @returns {*}"," */","module.exports.load = (callback) => {","    var iswin = (/^win/).test(process.platform),","        home = iswin ? process.env.USERPROFILE : process.env.HOME,","","        configFiles = [];","","    configFiles.push(join(process.cwd(), '.' + FILE_NAME));","    home && configFiles.push(join(home, '.' + POSTMAN_CONFIG_DIR, FILE_NAME));","    !iswin && configFiles.push(join('/etc', POSTMAN_CONFIG_DIR, FILE_NAME));","","    async.mapSeries(configFiles, (path, cb) => {","        fs.readFile(path, (err, data) => {","            if (err) {","                return cb(null, {}); // err masked to avoid overpopulating terminal with missing .newmanrc messages","            }","            data && data.toString && (data = data.toString());","            try {","                return cb(null, parseJson(data));","            }","            catch (e) {","                return cb(_.set(e, 'help', `The file at ${path} contains invalid data.`));","            }","        });","    }, (err, files) => {","        if (err) {","            return callback(err);","        }","","        return callback(null, _.merge.apply(this, files));","    });","};",""],"l":{"1":1,"27":1,"28":0,"33":0,"34":0,"35":0,"37":0,"38":0,"39":0,"40":0,"42":0,"43":0,"44":0,"47":0,"51":0,"52":0,"55":0}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/reporters/cli/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/reporters/cli/index.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0,0],"41":[0,0,0],"42":[0,0,0],"43":[0,0,0],"44":[0,0],"45":[0,0],"46":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"(anonymous_1)","line":40,"loc":{"start":{"line":40,"column":21},"end":{"line":40,"column":66}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":23},"end":{"line":53,"column":35}}},"3":{"name":"(anonymous_3)","line":74,"loc":{"start":{"line":74,"column":24},"end":{"line":74,"column":36}}},"4":{"name":"(anonymous_4)","line":84,"loc":{"start":{"line":84,"column":34},"end":{"line":84,"column":52}}},"5":{"name":"(anonymous_5)","line":93,"loc":{"start":{"line":93,"column":29},"end":{"line":93,"column":47}}},"6":{"name":"(anonymous_6)","line":112,"loc":{"start":{"line":112,"column":32},"end":{"line":112,"column":50}}},"7":{"name":"(anonymous_7)","line":117,"loc":{"start":{"line":117,"column":26},"end":{"line":117,"column":44}}},"8":{"name":"(anonymous_8)","line":127,"loc":{"start":{"line":127,"column":25},"end":{"line":127,"column":43}}},"9":{"name":"(anonymous_9)","line":132,"loc":{"start":{"line":132,"column":28},"end":{"line":132,"column":46}}},"10":{"name":"(anonymous_10)","line":142,"loc":{"start":{"line":142,"column":56},"end":{"line":142,"column":74}}},"11":{"name":"(anonymous_11)","line":148,"loc":{"start":{"line":148,"column":44},"end":{"line":148,"column":68}}},"12":{"name":"(anonymous_12)","line":195,"loc":{"start":{"line":195,"column":21},"end":{"line":195,"column":67}}},"13":{"name":"(anonymous_13)","line":223,"loc":{"start":{"line":223,"column":12},"end":{"line":223,"column":27}}},"14":{"name":"(anonymous_14)","line":271,"loc":{"start":{"line":271,"column":19},"end":{"line":271,"column":39}}},"15":{"name":"(anonymous_15)","line":281,"loc":{"start":{"line":281,"column":48},"end":{"line":281,"column":76}}},"16":{"name":"(anonymous_16)","line":295,"loc":{"start":{"line":295,"column":28},"end":{"line":295,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":16,"column":23}},"2":{"start":{"line":19,"column":0},"end":{"line":25,"column":3}},"3":{"start":{"line":40,"column":0},"end":{"line":157,"column":2}},"4":{"start":{"line":41,"column":4},"end":{"line":44,"column":59}},"5":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"6":{"start":{"line":48,"column":8},"end":{"line":48,"column":15}},"7":{"start":{"line":53,"column":4},"end":{"line":67,"column":7}},"8":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"9":{"start":{"line":58,"column":8},"end":{"line":61,"column":9}},"10":{"start":{"line":60,"column":12},"end":{"line":60,"column":112}},"11":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"12":{"start":{"line":65,"column":12},"end":{"line":65,"column":87}},"13":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"14":{"start":{"line":71,"column":8},"end":{"line":71,"column":15}},"15":{"start":{"line":74,"column":4},"end":{"line":82,"column":7}},"16":{"start":{"line":75,"column":8},"end":{"line":75,"column":90}},"17":{"start":{"line":78,"column":8},"end":{"line":78,"column":48}},"18":{"start":{"line":81,"column":8},"end":{"line":81,"column":83}},"19":{"start":{"line":84,"column":4},"end":{"line":91,"column":7}},"20":{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},"21":{"start":{"line":86,"column":12},"end":{"line":86,"column":19}},"22":{"start":{"line":90,"column":8},"end":{"line":90,"column":105}},"23":{"start":{"line":93,"column":4},"end":{"line":109,"column":7}},"24":{"start":{"line":94,"column":8},"end":{"line":95,"column":68}},"25":{"start":{"line":98,"column":8},"end":{"line":103,"column":9}},"26":{"start":{"line":99,"column":12},"end":{"line":99,"column":97}},"27":{"start":{"line":102,"column":12},"end":{"line":102,"column":37}},"28":{"start":{"line":107,"column":8},"end":{"line":108,"column":73}},"29":{"start":{"line":112,"column":4},"end":{"line":114,"column":7}},"30":{"start":{"line":113,"column":8},"end":{"line":113,"column":116}},"31":{"start":{"line":117,"column":4},"end":{"line":124,"column":7}},"32":{"start":{"line":118,"column":8},"end":{"line":118,"column":51}},"33":{"start":{"line":119,"column":8},"end":{"line":119,"column":66}},"34":{"start":{"line":121,"column":8},"end":{"line":123,"column":77}},"35":{"start":{"line":127,"column":4},"end":{"line":130,"column":7}},"36":{"start":{"line":128,"column":8},"end":{"line":129,"column":52}},"37":{"start":{"line":132,"column":4},"end":{"line":139,"column":7}},"38":{"start":{"line":133,"column":8},"end":{"line":133,"column":26}},"39":{"start":{"line":136,"column":8},"end":{"line":138,"column":69}},"40":{"start":{"line":142,"column":4},"end":{"line":156,"column":7}},"41":{"start":{"line":143,"column":8},"end":{"line":144,"column":20}},"42":{"start":{"line":148,"column":8},"end":{"line":150,"column":54}},"43":{"start":{"line":149,"column":12},"end":{"line":149,"column":79}},"44":{"start":{"line":152,"column":8},"end":{"line":155,"column":73}},"45":{"start":{"line":159,"column":0},"end":{"line":321,"column":3}},"46":{"start":{"line":196,"column":8},"end":{"line":196,"column":25}},"47":{"start":{"line":199,"column":8},"end":{"line":205,"column":11}},"48":{"start":{"line":208,"column":8},"end":{"line":239,"column":11}},"49":{"start":{"line":224,"column":12},"end":{"line":225,"column":34}},"50":{"start":{"line":228,"column":12},"end":{"line":228,"column":103}},"51":{"start":{"line":231,"column":12},"end":{"line":238,"column":15}},"52":{"start":{"line":242,"column":8},"end":{"line":246,"column":12}},"53":{"start":{"line":249,"column":8},"end":{"line":253,"column":12}},"54":{"start":{"line":256,"column":8},"end":{"line":260,"column":12}},"55":{"start":{"line":262,"column":8},"end":{"line":262,"column":28}},"56":{"start":{"line":272,"column":8},"end":{"line":293,"column":11}},"57":{"start":{"line":282,"column":16},"end":{"line":282,"column":30}},"58":{"start":{"line":284,"column":16},"end":{"line":289,"column":17}},"59":{"start":{"line":285,"column":20},"end":{"line":285,"column":35}},"60":{"start":{"line":286,"column":20},"end":{"line":286,"column":50}},"61":{"start":{"line":287,"column":20},"end":{"line":287,"column":83}},"62":{"start":{"line":288,"column":20},"end":{"line":288,"column":96}},"63":{"start":{"line":291,"column":16},"end":{"line":291,"column":33}},"64":{"start":{"line":295,"column":8},"end":{"line":317,"column":11}},"65":{"start":{"line":296,"column":12},"end":{"line":297,"column":70}},"66":{"start":{"line":300,"column":12},"end":{"line":301,"column":91}},"67":{"start":{"line":304,"column":12},"end":{"line":304,"column":76}},"68":{"start":{"line":307,"column":12},"end":{"line":308,"column":100}},"69":{"start":{"line":311,"column":12},"end":{"line":312,"column":95}},"70":{"start":{"line":315,"column":12},"end":{"line":316,"column":37}},"71":{"start":{"line":319,"column":8},"end":{"line":319,"column":28}},"72":{"start":{"line":324,"column":0},"end":{"line":324,"column":45}},"73":{"start":{"line":326,"column":0},"end":{"line":326,"column":36}}},"branchMap":{"1":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"2":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":8},"end":{"line":47,"column":30}},{"start":{"line":47,"column":34},"end":{"line":47,"column":48}}]},"3":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":8}},{"start":{"line":58,"column":8},"end":{"line":58,"column":8}}]},"4":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":8}},{"start":{"line":64,"column":8},"end":{"line":64,"column":8}}]},"5":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":39}},{"start":{"line":64,"column":43},"end":{"line":64,"column":55}},{"start":{"line":64,"column":59},"end":{"line":64,"column":78}}]},"6":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"7":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":35},"end":{"line":75,"column":47}},{"start":{"line":75,"column":52},"end":{"line":75,"column":69}},{"start":{"line":75,"column":73},"end":{"line":75,"column":88}}]},"8":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":8},"end":{"line":81,"column":28}},{"start":{"line":81,"column":32},"end":{"line":81,"column":82}}]},"9":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":8}},{"start":{"line":85,"column":8},"end":{"line":85,"column":8}}]},"10":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":12},"end":{"line":85,"column":15}},{"start":{"line":85,"column":19},"end":{"line":85,"column":39}}]},"11":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":19},"end":{"line":95,"column":29}},{"start":{"line":95,"column":34},"end":{"line":95,"column":66}}]},"12":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":98,"column":8}},{"start":{"line":98,"column":8},"end":{"line":98,"column":8}}]},"13":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":12},"end":{"line":98,"column":21}},{"start":{"line":98,"column":26},"end":{"line":98,"column":52}}]},"14":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":12},"end":{"line":99,"column":17}},{"start":{"line":99,"column":21},"end":{"line":99,"column":96}}]},"15":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":8},"end":{"line":107,"column":14}},{"start":{"line":107,"column":18},"end":{"line":108,"column":72}}]},"16":{"line":107,"type":"cond-expr","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":24}},{"start":{"line":108,"column":27},"end":{"line":108,"column":38}}]},"17":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":54},"end":{"line":108,"column":65}},{"start":{"line":108,"column":69},"end":{"line":108,"column":70}}]},"18":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":8},"end":{"line":113,"column":17}},{"start":{"line":113,"column":21},"end":{"line":113,"column":115}}]},"19":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":19},"end":{"line":118,"column":29}},{"start":{"line":118,"column":33},"end":{"line":118,"column":50}}]},"20":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":15},"end":{"line":119,"column":19}},{"start":{"line":119,"column":23},"end":{"line":119,"column":60}},{"start":{"line":119,"column":64},"end":{"line":119,"column":65}}]},"21":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":24},"end":{"line":119,"column":35}},{"start":{"line":119,"column":39},"end":{"line":119,"column":40}}]},"22":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":45},"end":{"line":119,"column":54}},{"start":{"line":119,"column":58},"end":{"line":119,"column":59}}]},"23":{"line":121,"type":"cond-expr","locations":[{"start":{"line":121,"column":14},"end":{"line":121,"column":47}},{"start":{"line":122,"column":12},"end":{"line":123,"column":76}}]},"24":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":8},"end":{"line":128,"column":11}},{"start":{"line":128,"column":15},"end":{"line":129,"column":51}}]},"25":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":12},"end":{"line":129,"column":19}},{"start":{"line":129,"column":23},"end":{"line":129,"column":37}},{"start":{"line":129,"column":41},"end":{"line":129,"column":50}}]},"26":{"line":136,"type":"cond-expr","locations":[{"start":{"line":136,"column":35},"end":{"line":136,"column":67}},{"start":{"line":137,"column":12},"end":{"line":137,"column":88}}]},"27":{"line":137,"type":"cond-expr","locations":[{"start":{"line":138,"column":12},"end":{"line":138,"column":36}},{"start":{"line":138,"column":39},"end":{"line":138,"column":67}}]},"28":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":30}},{"start":{"line":142,"column":34},"end":{"line":156,"column":6}}]},"29":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":20},"end":{"line":143,"column":35}},{"start":{"line":143,"column":39},"end":{"line":143,"column":50}}]},"30":{"line":149,"type":"cond-expr","locations":[{"start":{"line":149,"column":34},"end":{"line":149,"column":52}},{"start":{"line":149,"column":55},"end":{"line":149,"column":57}}]},"31":{"line":200,"type":"binary-expr","locations":[{"start":{"line":200,"column":19},"end":{"line":200,"column":41}},{"start":{"line":200,"column":45},"end":{"line":200,"column":78}}]},"32":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":8},"end":{"line":208,"column":13}},{"start":{"line":208,"column":17},"end":{"line":239,"column":10}}]},"33":{"line":228,"type":"cond-expr","locations":[{"start":{"line":228,"column":36},"end":{"line":228,"column":53}},{"start":{"line":228,"column":57},"end":{"line":228,"column":101}}]},"34":{"line":228,"type":"cond-expr","locations":[{"start":{"line":228,"column":74},"end":{"line":228,"column":79}},{"start":{"line":228,"column":82},"end":{"line":228,"column":101}}]},"35":{"line":234,"type":"cond-expr","locations":[{"start":{"line":234,"column":33},"end":{"line":234,"column":58}},{"start":{"line":234,"column":61},"end":{"line":234,"column":74}}]},"36":{"line":242,"type":"binary-expr","locations":[{"start":{"line":242,"column":8},"end":{"line":242,"column":15}},{"start":{"line":242,"column":19},"end":{"line":246,"column":11}}]},"37":{"line":249,"type":"binary-expr","locations":[{"start":{"line":249,"column":8},"end":{"line":249,"column":17}},{"start":{"line":249,"column":21},"end":{"line":253,"column":11}}]},"38":{"line":281,"type":"cond-expr","locations":[{"start":{"line":281,"column":42},"end":{"line":281,"column":44}},{"start":{"line":281,"column":48},"end":{"line":292,"column":78}}]},"39":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":16},"end":{"line":284,"column":16}},{"start":{"line":284,"column":16},"end":{"line":284,"column":16}}]},"40":{"line":284,"type":"binary-expr","locations":[{"start":{"line":284,"column":20},"end":{"line":284,"column":31}},{"start":{"line":284,"column":35},"end":{"line":284,"column":45}},{"start":{"line":284,"column":50},"end":{"line":284,"column":65}}]},"41":{"line":296,"type":"binary-expr","locations":[{"start":{"line":296,"column":23},"end":{"line":296,"column":36}},{"start":{"line":296,"column":40},"end":{"line":296,"column":58}},{"start":{"line":296,"column":62},"end":{"line":296,"column":63}}]},"42":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":26},"end":{"line":297,"column":39}},{"start":{"line":297,"column":43},"end":{"line":297,"column":64}},{"start":{"line":297,"column":68},"end":{"line":297,"column":69}}]},"43":{"line":300,"type":"binary-expr","locations":[{"start":{"line":300,"column":12},"end":{"line":300,"column":26}},{"start":{"line":300,"column":31},"end":{"line":300,"column":56}},{"start":{"line":301,"column":17},"end":{"line":301,"column":89}}]},"44":{"line":304,"type":"binary-expr","locations":[{"start":{"line":304,"column":12},"end":{"line":304,"column":22}},{"start":{"line":304,"column":27},"end":{"line":304,"column":74}}]},"45":{"line":307,"type":"binary-expr","locations":[{"start":{"line":307,"column":12},"end":{"line":307,"column":26}},{"start":{"line":308,"column":17},"end":{"line":308,"column":98}}]},"46":{"line":311,"type":"binary-expr","locations":[{"start":{"line":311,"column":12},"end":{"line":311,"column":26}},{"start":{"line":311,"column":30},"end":{"line":311,"column":44}},{"start":{"line":312,"column":17},"end":{"line":312,"column":93}}]}},"code":["var _ = require('lodash'),","    colors = require('colors/safe'),","    Table = require('cli-table2'),","    format = require('util').format,","","    util = require('../../util'),","    cliUtils = require('./cli-utils'),","    print = require('../../print'),","    pad = cliUtils.padLeft,","","    LF = '\\n',","    SPC = ' ',","    DOT = '.',","    E = '',","","    PostmanCLIReporter;","","// sets theme for colors for console logging","colors.setTheme({","    log: 'grey',","    info: 'cyan',","    warn: 'yellow',","    debug: 'blue',","    error: 'red'","});","","/**"," * CLI reporter"," *"," * @param {EventEmitter} emitter - An EventEmitter instance with event handler attachers to trigger reporting."," * @param {Object} reporterOptions - CLI reporter options object."," * @param {Boolean=} reporterOptions.silent - Boolean flag to turn off CLI reporting altogether, if set to true."," * @param {Boolean=} reporterOptions.noAssertions - Boolean flag to turn off assertion reporting, if set to true."," * @param {Boolean=} reporterOptions.noSummary - Boolean flag to turn off summary reporting altogether, if set to true."," * @param {Boolean=} reporterOptions.noFailures - Boolean flag to turn off failure reporting altogether, if set to true."," * @param {Boolean=} reporterOptions.noConsole - Boolean flag to turn off console logging, if set to true."," * @param {Object} options - A set of generic collection run options."," * @returns {*}"," */","PostmanCLIReporter = function (emitter, reporterOptions, options) {","    var currentGroup = options.collection,","        inspect = cliUtils.inspector(options),","        wrap = cliUtils.wrapper(),","        symbols = cliUtils.symbols(options.disableUnicode);","","    // respect silent option to not report anything","    if (reporterOptions.silent || options.silent) {","        return; // we simply do not register anything!","    }","","    // we register the `done` listener first so that in case user does not want to show results of collection run, we","    // simply do not register the other events","    emitter.on('done', function () {","        // for some reason, if there is no run summary, it is unexpected and hence don't validate this","        var run = this.summary.run;","","        // show the summary table (provided option does not say it is not to be shown)","        if (!reporterOptions.noSummary) {","            // @todo: possible missing .toString() call on parseStatistics below? (see parseFailures call below)","            print(LF + PostmanCLIReporter.parseStatistics(run.stats, run.timings, run.transfers, options) + LF);","        }","","        // show the failures table (provided option does not say it is not to be shown)","        if (!reporterOptions.noFailures && run.failures && run.failures.length) {","            print(LF + PostmanCLIReporter.parseFailures(run.failures).toString() + LF);","        }","    });","","    // in case user does not want to show results of collection run, we simply do not register the other events.","    if (reporterOptions.noAssertions) {","        return;","    }","","    emitter.on('start', function () {","        var collectionIdentifier = currentGroup && (currentGroup.name || currentGroup.id);","","        // print the newman banner","        print('%s\\n\\n', colors.reset('newman'));","","        // print the collection name and newman info line","        collectionIdentifier && print.lf('%s', colors.reset(collectionIdentifier));","    });","","    emitter.on('beforeIteration', function (err, o) {","        if (err || o.cursor.cycles <= 1) {","            return; // do not print iteration banner if it is a single iteration run","        }","","        // print the iteration info line","        print.lf(LF + colors.gray.underline('Iteration %d/%d'), o.cursor.iteration + 1, o.cursor.cycles);","    });","","    emitter.on('beforeItem', function (err, o) {","        var itemGroup = o.item.parent(),","            root = !itemGroup || (itemGroup === options.collection);","","        // in case this item belongs to a separate folder, print that folder name","        if (itemGroup && (currentGroup !== itemGroup)) {","            !root && print('\\n%s %s', symbols.folder, colors.reset(util.getFullName(itemGroup)));","","            // set the flag that keeps track of the currently running group","            currentGroup = itemGroup;","        }","","        // we print the item name. the symbol prefix denotes if the item is in root or under folder.","        // @todo - when we do indentation, we would not need symbolic representation","        o.item && print.lf('\\n%s %s', (root ?","            symbols.root : symbols.sub), colors.reset(o.item.name || E));","    });","","    // print out the request name to be executed and start a spinner","    emitter.on('beforeRequest', function (err, o) {","        o.request && print('  %s %s ', colors.gray(o.request.method), colors.gray(o.request.url)).wait(colors.gray);","    });","","    // output the response code, reason and time","    emitter.on('request', function (err, o) {","        var size = o.response && o.response.size();","        size = size && (size.header || 0) + (size.body || 0) || 0;","","        err ? print.lf(colors.red('[errored]')) :","            print.lf(colors.gray('[%d %s, %s, %s]'), o.response.code, o.response.reason(),","                util.filesize(size), util.prettyms(o.response.responseTime));","    });","","    // Print script errors in real time","    emitter.on('script', function (err, o) {","        err && print.lf(colors.red.bold('%s⠄ %s in %s-script'), pad(this.summary.run.failures.length, 3, SPC), err.name,","            o.event && o.event.listen || 'unknown');","    });","","    emitter.on('assertion', function (err, o) {","        var passed = !err;","","        // print each test assertions","        print.lf('%s %s', passed ? colors.green(`  ${symbols.ok} `) :","            colors.red.bold(pad(this.summary.run.failures.length, 3, SPC) + symbols.dot), passed ?","            colors.gray(o.assertion) : colors.red.bold(o.assertion));","    });","","    // show user console logs in a neatly formatted way (provided user has not disabled the same)","    !reporterOptions.noConsole && emitter.on('console', function (err, o) {","        var color = colors[o.level] || colors.gray,","            message;","","        // we first merge all messages to a string. while merging we run the values to util.inspect to colour code the","        // messages based on data type","        message = wrap(_.reduce(o.messages, function (log, message) { // wrap the whole message to the window size","            return (log += (log ? colors.white(', ') : '') + inspect(message));","        }, E), `  ${color(symbols.console.middle)} `); // add an indentation line at the beginning","","        print.buffer(color(`  ${symbols.console.top}\\n`), color(`  ${symbols.console.bottom}\\n`))","            // tweak the message to ensure that its surrounding is not brightly coloured.","            // also ensure to remove any blank lines generated due to util.inspect","            .nobuffer(colors.gray(message.replace(/\\n\\s*\\n/g, LF) + LF));","    });","};","","_.assignIn(PostmanCLIReporter, {","","    // @todo: change function signature to accept run object and options, thereby reducing parameters","    /**","     * A CLI reporter method to parse collection run statistics into a CLI table.","     *","     * @param {Object} stats - The cumulative collection run status object.","     * @param {Object} stats.iterations - A set of values for total, pending, and failed iterations.","     * @param {Number} stats.iterations.total - Total iterations in the current collection run.","     * @param {Number} stats.iterations.pending - Pending iterations in the current collection run.","     * @param {Number} stats.iterations.failed - Failed iterations in the current collection run.","     * @param {Object} stats.requests - A set of values for total, pending, and failed requests.","     * @param {Number} stats.requests.total - Total requests in the current collection run.","     * @param {Number} stats.requests.pending - Pending requests in the current collection run.","     * @param {Number} stats.requests.failed - Failed requests in the current collection run.","     * @param {Object} stats.testScripts - A set of values for total, pending, and failed testScripts.","     * @param {Number} stats.testScripts.total - Total testScripts in the current collection run.","     * @param {Number} stats.testScripts.pending - Pending testScripts in the current collection run.","     * @param {Number} stats.testScripts.failed - Failed testScripts in the current collection run.","     * @param {Object} stats.prerequestScripts - A set of values for total, pending, and failed prerequestScripts.","     * @param {Number} stats.prerequestScripts.total - Total prerequestScripts in the current collection run.","     * @param {Number} stats.prerequestScripts.pending - Pending prerequestScripts in the current collection run.","     * @param {Number} stats.prerequestScripts.failed - Failed prerequestScripts in the current collection run.","     * @param {Object} stats.assertions - A set of values for total, pending, and failed assertions.","     * @param {Number} stats.assertions.total - Total assertions in the current collection run.","     * @param {Number} stats.assertions.pending - Pending assertions in the current collection run.","     * @param {Number} stats.assertions.failed - Failed assertions in the current collection run.","     * @param {Object} timings - A set of values for the timings of the current collection run.","     * @param {Number} timings.completed - The end timestamp for the current collection run.","     * @param {Number} timings.started - The start timestamp for the current collection run","     * @param {String} timings.responseAverage - The average response time across all requests","     * @param {Object} transfers - A set of details on the network usage for the current collection run.","     * @param {String} transfers.responseTotal - The net extent of the data transfer achieved during the collection run.","     * @param {Object} options - The set of generic collection run options.","     * @return {Table} - The constructed collection run statistics table.","     */","    parseStatistics: function (stats, timings, transfers, options) {","        var summaryTable;","","        // create the summary table","        summaryTable = new Table({","            chars: options.disableUnicode && cliUtils.cliTableTemplateFallback,","            style: { head: [] },","            head: [E, 'executed', '  failed'],","            colAligns: ['right', 'right', 'right'],","            colWidths: [25]","        });","","        // add specific rows to show in summary","        stats && _.forEach([{","            source: 'iterations',","            label: 'iterations'","        }, {","            source: 'requests',","            label: 'requests'","        }, {","            source: 'testScripts',","            label: 'test-scripts'","        }, {","            source: 'prerequestScripts',","            label: 'prerequest-scripts'","        }, {","            source: 'assertions',","            label: 'assertions'","        }], function (row) {","            var metric = stats[row.source],","                label = row.label;","","            // colour the label based on the failure or pending count of the metric","            label = metric.failed ? colors.red(label) : (metric.pending ? label : colors.green(label));","","            // push the statistics","            summaryTable.push([","                label,","                metric.total,","                (metric.failed ? colors.red(metric.failed) : metric.failed)","                // @todo - add information of pending scripts","                // (metric.failed ? colors.red(metric.failed) : metric.failed) +","                //     (metric.pending ? format(' (%d pending)', metric.pending) : E)","            ]);","        });","","        // add the total execution time to summary","        timings && summaryTable.push([{","            colSpan: 3,","            content: format('total run duration: %s', util.prettyms(timings.completed - timings.started)),","            hAlign: 'left' // since main style was set to right","        }]);","","        // add row to show total data received","        transfers && summaryTable.push([{","            colSpan: 3,","            content: format('total data received: %s (approx)', util.filesize(transfers.responseTotal)),","            hAlign: 'left'","        }]);","","        // add row to show average response time","        summaryTable.push([{","            colSpan: 3,","            content: format('average response time: %s', util.prettyms(timings.responseAverage)),","            hAlign: 'left'","        }]);","","        return summaryTable;","    },","","    /**","     * A CLI reporter method to parse collection run failure statistics into a CLI table.","     *","     * @param  {Array} failures - An array of failure objects.","     * @return {Table} - The constructed CLI failure Table object.","     */","    parseFailures: function (failures) {","        var failureTable = new Table({","            head: [{","                hAlign: 'right',","                content: colors.red.underline('#')","            }, colors.red.underline('failure'),","                colors.red.underline('detail')],","            chars: cliUtils.cliTableTemplate_Blank,","            wordWrap: true,","            colAligns: ['right'],","            colWidths: cliUtils.noTTY() ? [] : (function (size, indexOrder) {","                var colWidths;","","                if (size.exists && size.width && (size.width > 20)) {","                    colWidths = [];","                    colWidths[0] = indexOrder + 3;","                    colWidths[1] = parseInt((size.width - colWidths[0]) * 0.2, 10);","                    colWidths[2] = parseInt(size.width - (colWidths[0] + colWidths[1] + 5), 10);","                }","","                return colWidths;","            }(cliUtils.dimension(), Number(failures.length.toString().length)))","        });","","        _.forEach(failures, function (failure, index) {","            var name = failure.error && failure.error.name || E,","                message = failure.error && failure.error.message || E;","","            // augment name with iteration information","            failure.cursor && (failure.cursor.cycles > 1) &&","                (name += LF + colors.gray('iteration: ' + (failure.cursor.iteration + 1)));","","            // augment the message with stack information","            failure.at && (message += LF + colors.gray('at ' + failure.at));","","            // augment message with item information","            failure.source &&","                (message += format(colors.gray('\\ninside \"%s\"'), util.getFullName(failure.source)));","","            // augment message with item parent information","            failure.source && failure.parent &&","                (message += format(colors.gray(' of \"%s\"'), util.getFullName(failure.parent)));","","","            failureTable.push([pad(Number(index + 1), Number(failures.length.toString().length)).toString() +","                DOT, name, message]);","        });","","        return failureTable;","    }","});","","// Mark the CLI reporter as dominant, so that no two dominant reporters are together","PostmanCLIReporter.prototype.dominant = true;","","module.exports = PostmanCLIReporter;",""],"l":{"1":1,"19":1,"40":1,"41":0,"47":0,"48":0,"53":0,"55":0,"58":0,"60":0,"64":0,"65":0,"70":0,"71":0,"74":0,"75":0,"78":0,"81":0,"84":0,"85":0,"86":0,"90":0,"93":0,"94":0,"98":0,"99":0,"102":0,"107":0,"112":0,"113":0,"117":0,"118":0,"119":0,"121":0,"127":0,"128":0,"132":0,"133":0,"136":0,"142":0,"143":0,"148":0,"149":0,"152":0,"159":1,"196":0,"199":0,"208":0,"224":0,"228":0,"231":0,"242":0,"249":0,"256":0,"262":0,"272":0,"282":0,"284":0,"285":0,"286":0,"287":0,"288":0,"291":0,"295":0,"296":0,"300":0,"304":0,"307":0,"311":0,"315":0,"319":0,"324":1,"326":1}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/reporters/cli/cli-utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/reporters/cli/cli-utils.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":86,"loc":{"start":{"line":86,"column":13},"end":{"line":86,"column":35}}},"2":{"name":"(anonymous_2)","line":96,"loc":{"start":{"line":96,"column":11},"end":{"line":96,"column":28}}},"3":{"name":"(anonymous_3)","line":106,"loc":{"start":{"line":106,"column":15},"end":{"line":106,"column":37}}},"4":{"name":"(anonymous_4)","line":114,"loc":{"start":{"line":114,"column":15},"end":{"line":114,"column":31}}},"5":{"name":"(anonymous_5)","line":124,"loc":{"start":{"line":124,"column":13},"end":{"line":124,"column":25}}},"6":{"name":"(anonymous_6)","line":129,"loc":{"start":{"line":129,"column":15},"end":{"line":129,"column":39}}},"7":{"name":"(anonymous_7)","line":143,"loc":{"start":{"line":143,"column":15},"end":{"line":143,"column":27}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5,"column":13}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":30}},"4":{"start":{"line":11,"column":0},"end":{"line":172,"column":2}},"5":{"start":{"line":87,"column":8},"end":{"line":87,"column":70}},"6":{"start":{"line":97,"column":8},"end":{"line":97,"column":76}},"7":{"start":{"line":107,"column":8},"end":{"line":112,"column":14}},"8":{"start":{"line":114,"column":8},"end":{"line":116,"column":10}},"9":{"start":{"line":115,"column":12},"end":{"line":115,"column":42}},"10":{"start":{"line":125,"column":8},"end":{"line":127,"column":94}},"11":{"start":{"line":129,"column":8},"end":{"line":135,"column":10}},"12":{"start":{"line":130,"column":12},"end":{"line":134,"column":15}},"13":{"start":{"line":144,"column":8},"end":{"line":146,"column":19}},"14":{"start":{"line":148,"column":8},"end":{"line":149,"column":33}},"15":{"start":{"line":148,"column":14},"end":{"line":148,"column":35}},"16":{"start":{"line":149,"column":20},"end":{"line":149,"column":31}},"17":{"start":{"line":151,"column":8},"end":{"line":164,"column":9}},"18":{"start":{"line":152,"column":12},"end":{"line":163,"column":13}},"19":{"start":{"line":153,"column":16},"end":{"line":153,"column":59}},"20":{"start":{"line":154,"column":16},"end":{"line":154,"column":60}},"21":{"start":{"line":156,"column":17},"end":{"line":163,"column":13}},"22":{"start":{"line":157,"column":16},"end":{"line":157,"column":47}},"23":{"start":{"line":158,"column":16},"end":{"line":158,"column":48}},"24":{"start":{"line":160,"column":17},"end":{"line":163,"column":13}},"25":{"start":{"line":161,"column":16},"end":{"line":161,"column":45}},"26":{"start":{"line":162,"column":16},"end":{"line":162,"column":47}},"27":{"start":{"line":166,"column":8},"end":{"line":170,"column":10}},"28":{"start":{"line":174,"column":0},"end":{"line":174,"column":26}}},"branchMap":{"1":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":53},"end":{"line":87,"column":56}},{"start":{"line":87,"column":60},"end":{"line":87,"column":63}}]},"2":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":15},"end":{"line":97,"column":21}},{"start":{"line":97,"column":26},"end":{"line":97,"column":49}},{"start":{"line":97,"column":53},"end":{"line":97,"column":74}}]},"3":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":26},"end":{"line":109,"column":44}},{"start":{"line":109,"column":48},"end":{"line":109,"column":80}}]},"4":{"line":111,"type":"cond-expr","locations":[{"start":{"line":111,"column":77},"end":{"line":111,"column":92}},{"start":{"line":111,"column":95},"end":{"line":111,"column":97}}]},"5":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":31},"end":{"line":111,"column":47}},{"start":{"line":111,"column":52},"end":{"line":111,"column":72}}]},"6":{"line":127,"type":"cond-expr","locations":[{"start":{"line":127,"column":68},"end":{"line":127,"column":83}},{"start":{"line":127,"column":86},"end":{"line":127,"column":88}}]},"7":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":22},"end":{"line":127,"column":38}},{"start":{"line":127,"column":43},"end":{"line":127,"column":63}}]},"8":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":151,"column":8}},{"start":{"line":151,"column":8},"end":{"line":151,"column":8}}]},"9":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":12},"end":{"line":151,"column":15}},{"start":{"line":151,"column":19},"end":{"line":151,"column":32}},{"start":{"line":151,"column":36},"end":{"line":151,"column":49}}]},"10":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":12},"end":{"line":152,"column":12}},{"start":{"line":152,"column":12},"end":{"line":152,"column":12}}]},"11":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":17},"end":{"line":156,"column":17}},{"start":{"line":156,"column":17},"end":{"line":156,"column":17}}]},"12":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":17},"end":{"line":160,"column":17}},{"start":{"line":160,"column":17},"end":{"line":160,"column":17}}]},"13":{"line":160,"type":"binary-expr","locations":[{"start":{"line":160,"column":21},"end":{"line":160,"column":43}},{"start":{"line":160,"column":47},"end":{"line":160,"column":66}}]},"14":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":22},"end":{"line":167,"column":45}},{"start":{"line":167,"column":49},"end":{"line":167,"column":70}}]}},"code":["var inspect = require('util').inspect,","    wrap = require('word-wrap'),","    symbols = require('./cli-utils-symbols'),","","    cliUtils;","","// set styling for inspect options","inspect.styles.string = 'grey';","inspect.styles.name = 'white';","","cliUtils = {","","    /**","     * A helper method that picks the right set of symbols for the given set of run conditions.","     *","     * @type {Function}","     */","    symbols: symbols,","","    /**","     * A set of blank CLI table symbols (default).","     *","     * @type {Object}","     */","    cliTableTemplate_Blank: {","        'top': '',","        'top-mid': '',","        'top-left': '',","        'top-right': '',","        'bottom': '',","        'bottom-mid': '',","        'bottom-left': '',","        'bottom-right': '',","        'middle': '',","        'mid': ' ',","        'mid-mid': '',","        'mid-left': '',","        'mid-right': '',","        'left': '',","        'left-mid': '',","        'left-left': '',","        'left-right': '',","        'right': '',","        'right-mid': '',","        'right-left': '',","        'right-right': ''","    },","","    /**","     * A set of fallback CLI table construction symbols, used when unicode has been disabled.","     *","     * @type {Object}","     */","    cliTableTemplateFallback: {","        'top': '-',","        'top-mid': '-',","        'top-left': '-',","        'top-right': '-',","        'bottom': '-',","        'bottom-mid': '-',","        'bottom-left': '-',","        'bottom-right': '-',","        'middle': '|',","        'mid': '-',","        'mid-mid': '+',","        'mid-left': '-',","        'mid-right': '-',","        'left': '|',","        'left-mid': '-',","        'left-left': '-',","        'left-right': '-',","        'right': '|',","        'right-mid': '-',","        'right-left': '-',","        'right-right': '-'","    },","","    /**","     * A CLI utility helper method that perfoms left padding on an input string.","     *","     * @param {String} nr - The string to be padded.","     * @param {Number} n - The length of the field, in which to left pad the input string.","     * @param {String=} str - An optional string used for padding the input string. Defaults to '0'.","     * @returns {String} - The resultant left padded string.","     */","    padLeft: function (nr, n, str) {","        return Array(n - String(nr).length + 1).join(str || '0') + nr;","    },","","    /**","     * A CLI utility helper method that checks for the non TTY compliance of the current run environment.","     *","     * @param {Boolean} - A flag to indicate usage of the --color option.","     * @returns {Boolean} - A boolean value depicting the result of the noTTY check.","     */","    noTTY: function (color) {","        return !color && (Boolean(process.env.CI) || !process.stdout.isTTY);","    },","","    /**","     * A CLI utility helper method that generates a color inspector function for CLI reports.","     *","     * @param {Object} runOptions - The set of run options acquired via the runner.","     * @return {Function} - A function to perform utils.inspect, given a sample item, under pre-existing options.","     */","    inspector: function (runOptions) {","        var dimension = cliUtils.dimension(),","            options = {","                colors: !(runOptions.noColor || cliUtils.noTTY(runOptions.color)),","                // note that similar dimension calculation is in utils.wrapper","                breakLength: ((dimension.exists && (dimension.width > 20)) ? dimension.width : 60) - 16","            };","","        return function (item) {","            return inspect(item, options);","        };","    },","","    /**","     * A CLI utility helper method to provide content wrapping functionality for CLI reports.","     *","     * @return {Function} - A sub-method to wrap content, given a piece of text, and indent value.","     */","    wrapper: function () {","        var dimension = cliUtils.dimension(),","            // note that similar dimension calculation is in utils.wrapper","            width = ((dimension.exists && (dimension.width > 20)) ? dimension.width : 60) - 6;","","        return function (text, indent) {","            return wrap(text, {","                indent: indent,","                width: width,","                cut: true","            });","        };","    },","","    /**","     * A CLI utility helper method to compute and scae the size of the CLI table to be displayed.","     *","     * @return {Object} - A set of properties: width, height, and TTY existance.","     */","    dimension: function () {","        var tty,","            width,","            height;","","        try { tty = require('tty'); }","        catch (e) { tty = null; }","","        if (tty && tty.isatty(1) && tty.isatty(2)) {","            if (process.stdout.getWindowSize) {","                width = process.stdout.getWindowSize(1)[0];","                height = process.stdout.getWindowSize(1)[1];","            }","            else if (tty.getWindowSize) {","                width = tty.getWindowSize()[1];","                height = tty.getWindowSize()[0];","            }","            else if (process.stdout.columns && process.stdout.rows) {","                height = process.stdout.rows;","                width = process.stdout.columns;","            }","        }","","        return {","            exists: !(Boolean(process.env.CI) || !process.stdout.isTTY),","            width: width,","            height: height","        };","    }","};","","module.exports = cliUtils;",""],"l":{"1":1,"8":1,"9":1,"11":1,"87":0,"97":0,"107":0,"114":0,"115":0,"125":0,"129":0,"130":0,"144":0,"148":0,"149":0,"151":0,"152":0,"153":0,"154":0,"156":0,"157":0,"158":0,"160":0,"161":0,"162":0,"166":0,"174":1}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/reporters/cli/cli-utils-symbols.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/reporters/cli/cli-utils-symbols.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":59,"loc":{"start":{"line":59,"column":10},"end":{"line":59,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":12}},"2":{"start":{"line":10,"column":0},"end":{"line":50,"column":2}},"3":{"start":{"line":59,"column":0},"end":{"line":68,"column":2}},"4":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"5":{"start":{"line":61,"column":8},"end":{"line":61,"column":33}},"6":{"start":{"line":63,"column":4},"end":{"line":65,"column":5}},"7":{"start":{"line":64,"column":8},"end":{"line":64,"column":31}},"8":{"start":{"line":67,"column":4},"end":{"line":67,"column":27}},"9":{"start":{"line":70,"column":0},"end":{"line":70,"column":25}}},"branchMap":{"1":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"2":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]}},"code":["var IS_WINDOWS = (/^win/).test(process.platform),","    subsets,","    symbols;","","/**"," * A set of symbol groups for use in different situations: regular, windows friendly unicode, and plain text."," *"," * @type {Object}"," */","subsets = {","    regular: {","        console: {","            top: '┌',","            middle: '│',","            bottom: '└'","        },","        dot: '.',","        folder: '❏',","        root: '→',","        sub: '↳',","        ok: '✓',","        error: '✖'","    },","    encoded: {","        console: {","            top: '\\u250C',","            middle: '\\u2502',","            bottom: '\\u2514'","        },","        dot: '.',","        folder: '\\u25A1',","        root: '\\u2192',","        sub: '\\u2514',","        ok: '\\u221A',","        error: '\\u00D7'","    },","    plainText: {","        console: {","            top: '-',","            middle: '|',","            bottom: '-'","        },","        dot: '.',","        folder: 'Folder',","        root: 'Root',","        sub: 'Sub-folder',","        ok: 'Pass',","        error: 'Fail'","    }","};","","/**"," * A method that picks the appropriate set of CLI report symbols under a given set of run conditions."," *"," * @param  {Boolean} disableUnicode - A flag to force plain text equivalents for CLI symbols if set to true."," * @returns {Object} - The right set of symbols from subsets for the given conditions."," * @todo Add additional parameter related to temp file read - writes"," */","symbols = function (disableUnicode) {","    if (disableUnicode) {","        return subsets.plainText;","    }","    if (IS_WINDOWS) { // modify symbols for windows platforms","        return subsets.encoded;","    }","","    return subsets.regular;","};","","module.exports = symbols;",""],"l":{"1":1,"10":1,"59":1,"60":0,"61":0,"63":0,"64":0,"67":0,"70":1}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/print/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/print/index.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1},"b":{"1":[0,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":20}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":14},"end":{"line":29,"column":26}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":11},"end":{"line":42,"column":23}}},"4":{"name":"(anonymous_4)","line":59,"loc":{"start":{"line":59,"column":13},"end":{"line":59,"column":30}}},"5":{"name":"(anonymous_5)","line":67,"loc":{"start":{"line":67,"column":32},"end":{"line":67,"column":44}}},"6":{"name":"(anonymous_6)","line":83,"loc":{"start":{"line":83,"column":15},"end":{"line":83,"column":27}}},"7":{"name":"(anonymous_7)","line":104,"loc":{"start":{"line":104,"column":15},"end":{"line":104,"column":45}}},"8":{"name":"(anonymous_8)","line":122,"loc":{"start":{"line":122,"column":17},"end":{"line":122,"column":29}}},"9":{"name":"(anonymous_9)","line":135,"loc":{"start":{"line":135,"column":17},"end":{"line":135,"column":29}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":11,"column":10}},"2":{"start":{"line":19,"column":0},"end":{"line":21,"column":2}},"3":{"start":{"line":20,"column":4},"end":{"line":20,"column":46}},"4":{"start":{"line":29,"column":0},"end":{"line":34,"column":2}},"5":{"start":{"line":30,"column":4},"end":{"line":30,"column":36}},"6":{"start":{"line":31,"column":4},"end":{"line":31,"column":38}},"7":{"start":{"line":32,"column":4},"end":{"line":32,"column":56}},"8":{"start":{"line":33,"column":4},"end":{"line":33,"column":17}},"9":{"start":{"line":42,"column":0},"end":{"line":47,"column":2}},"10":{"start":{"line":43,"column":4},"end":{"line":43,"column":36}},"11":{"start":{"line":44,"column":4},"end":{"line":44,"column":38}},"12":{"start":{"line":45,"column":4},"end":{"line":45,"column":61}},"13":{"start":{"line":46,"column":4},"end":{"line":46,"column":17}},"14":{"start":{"line":50,"column":0},"end":{"line":50,"column":24}},"15":{"start":{"line":59,"column":0},"end":{"line":74,"column":2}},"16":{"start":{"line":60,"column":4},"end":{"line":60,"column":19}},"17":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"18":{"start":{"line":63,"column":8},"end":{"line":63,"column":21}},"19":{"start":{"line":66,"column":4},"end":{"line":66,"column":30}},"20":{"start":{"line":67,"column":4},"end":{"line":71,"column":23}},"21":{"start":{"line":68,"column":8},"end":{"line":69,"column":102}},"22":{"start":{"line":70,"column":8},"end":{"line":70,"column":78}},"23":{"start":{"line":73,"column":4},"end":{"line":73,"column":17}},"24":{"start":{"line":83,"column":0},"end":{"line":91,"column":2}},"25":{"start":{"line":84,"column":4},"end":{"line":88,"column":5}},"26":{"start":{"line":85,"column":8},"end":{"line":85,"column":53}},"27":{"start":{"line":86,"column":8},"end":{"line":86,"column":32}},"28":{"start":{"line":87,"column":8},"end":{"line":87,"column":35}},"29":{"start":{"line":90,"column":4},"end":{"line":90,"column":17}},"30":{"start":{"line":93,"column":0},"end":{"line":93,"column":26}},"31":{"start":{"line":104,"column":0},"end":{"line":113,"column":2}},"32":{"start":{"line":105,"column":4},"end":{"line":105,"column":69}},"33":{"start":{"line":106,"column":4},"end":{"line":106,"column":28}},"34":{"start":{"line":108,"column":4},"end":{"line":108,"column":76}},"35":{"start":{"line":109,"column":4},"end":{"line":109,"column":55}},"36":{"start":{"line":111,"column":4},"end":{"line":111,"column":88}},"37":{"start":{"line":112,"column":4},"end":{"line":112,"column":17}},"38":{"start":{"line":122,"column":0},"end":{"line":126,"column":2}},"39":{"start":{"line":123,"column":4},"end":{"line":123,"column":19}},"40":{"start":{"line":124,"column":4},"end":{"line":124,"column":56}},"41":{"start":{"line":125,"column":4},"end":{"line":125,"column":17}},"42":{"start":{"line":135,"column":0},"end":{"line":142,"column":2}},"43":{"start":{"line":136,"column":4},"end":{"line":136,"column":76}},"44":{"start":{"line":137,"column":4},"end":{"line":140,"column":5}},"45":{"start":{"line":138,"column":8},"end":{"line":138,"column":44}},"46":{"start":{"line":139,"column":8},"end":{"line":139,"column":34}},"47":{"start":{"line":141,"column":4},"end":{"line":141,"column":17}},"48":{"start":{"line":144,"column":0},"end":{"line":144,"column":23}}},"branchMap":{"1":{"line":6,"type":"cond-expr","locations":[{"start":{"line":7,"column":8},"end":{"line":7,"column":34}},{"start":{"line":8,"column":8},"end":{"line":8,"column":78}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":17}},{"start":{"line":30,"column":21},"end":{"line":30,"column":35}}]},"3":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":17}},{"start":{"line":31,"column":21},"end":{"line":31,"column":37}}]},"4":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":17}},{"start":{"line":43,"column":21},"end":{"line":43,"column":35}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":17}},{"start":{"line":44,"column":21},"end":{"line":44,"column":37}}]},"6":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]},"7":{"line":69,"type":"cond-expr","locations":[{"start":{"line":69,"column":21},"end":{"line":69,"column":62}},{"start":{"line":69,"column":65},"end":{"line":69,"column":99}}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":9},"end":{"line":70,"column":47}},{"start":{"line":70,"column":53},"end":{"line":70,"column":76}}]},"9":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"10":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":5},"end":{"line":105,"column":32}},{"start":{"line":105,"column":37},"end":{"line":105,"column":68}}]},"11":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":20}},{"start":{"line":108,"column":25},"end":{"line":108,"column":74}}]},"12":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":20}},{"start":{"line":136,"column":25},"end":{"line":136,"column":74}}]},"13":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]}},"code":["var format = require('util').format,","    cliUtils = require('../reporters/cli/cli-utils'),","    SPC = ' ',","    BS = '\\b',","    LF = '\\n',","    WAIT_FRAMES = (/^win/).test(process.platform) ?","        ['\\u2015', '\\\\', '|', '/'] :","        ['⠄', '⠆', '⠇', '⠋', '⠙', '⠸', '⠰', '⠠', '⠰', '⠸', '⠙', '⠋', '⠇', '⠆'],","    WAIT_FRAMES_SIZE = WAIT_FRAMES.length - 1,","    WAIT_FRAMERATE = 100,","    print;","","/**"," * Function that prints to stdout using standard NodeJS util.format, without end newline."," *"," * @returns {print} - The result of context bound call to the run context, with all arguments passed."," * @chainable"," */","print = function () {","    return print.print.apply(this, arguments);","};","","/**"," * Function that prints to stdout using standard NodeJS util.format, without end newline."," *"," * @returns {print} - The updated print module wrapper, with unwait and unbuffer methods invoked."," * @chainable"," */","print.print = function () {","    print.waiting && print.unwait();","    print._buffer && print.unbuffer();","    process.stdout.write(format.apply(this, arguments));","    return print;","};","","/**"," * Print with a line feed at the end."," *"," * @returns {print} - The updated print module wrapper, with unwait and unbuffer methods invoked."," * @chainable"," */","print.lf = function () {","    print.waiting && print.unwait();","    print._buffer && print.unbuffer();","    process.stdout.write(format.apply(this, arguments) + LF);","    return print;","};","","// store the starting frame during wait","print._waitPosition = 0;","","/**"," * Draw a spinner until next print statement is received."," *"," * @param {Function=} color - Optional color function from `colors` module."," * @returns {print} - The print module wrapper, with a key set as a setInterval label."," * @chainable"," */","print.wait = function (color) {","    print.unwait();","","    if (cliUtils.noTTY()) {","        return print;","    }","","    process.stdout.write(SPC);","    print.waiting = setInterval(function () {","        process.stdout.write(BS +","            (color ? color(WAIT_FRAMES[print._waitPosition++]) : WAIT_FRAMES[print._waitPosition++]));","        (print._waitPosition > WAIT_FRAMES_SIZE) && (print._waitPosition = 0); // move frame","    }, WAIT_FRAMERATE);","","    return print;","};","","/**"," * Stops a running spinner on CLI. It is automatically taken care of in most cases."," *"," * @returns {print} - Returns the updated print module wrapper, with the cleared waiting label."," * @chainable"," * @see print.wait"," */","print.unwait = function () {","    if (print.waiting) {","        print.waiting = clearInterval(print.waiting);","        print._waitPosition = 0;","        process.stdout.write('\\b');","    }","","    return print;","};","","print._buffer = undefined;","","/**"," * Prints a message between start and end text. Consequent buffer calls does not print the start text and any other"," * unbuffered call or a delay of time prints the end text."," *"," * @param {String} startText - The text to begin printing with."," * @param {String} endText - The text that marks the end of the print routine."," * @returns {print} - The update print module wrapper with internal buffer and buffering members redefined."," * @chainable"," */","print.buffer = function (startText, endText) {","    (print._buffer === undefined) && process.stdout.write(startText);","    print._buffer = endText;","","    print._buferring && (print._buferring = clearTimeout(print._buferring));","    print._buferring = setTimeout(print.unbuffer, 500);","","    process.stdout.write(format.apply(this, Array.prototype.splice.call(arguments, 2)));","    return print;","};","","/**"," * Prints text without flushing the buffer."," *"," * @returns {print} - The update print module wrapper with unwait called."," * @chainable"," * @see print.buffer"," */","print.nobuffer = function () {","    print.unwait();","    process.stdout.write(format.apply(this, arguments));","    return print;","};","","/**"," * Flushes the buffer."," *"," * @returns {print} - The print module wrapper with internal private members: buffer, and buffering redefined."," * @chainable"," * @see print.buffer"," */","print.unbuffer = function () {","    print._buferring && (print._buferring = clearTimeout(print._buferring));","    if (print._buffer) {","        process.stdout.write(print._buffer);","        print._buffer = undefined;","    }","    return print;","};","","module.exports = print;",""],"l":{"1":1,"19":1,"20":0,"29":1,"30":0,"31":0,"32":0,"33":0,"42":1,"43":0,"44":0,"45":0,"46":0,"50":1,"59":1,"60":0,"62":0,"63":0,"66":0,"67":0,"68":0,"70":0,"73":0,"83":1,"84":0,"85":0,"86":0,"87":0,"90":0,"93":1,"104":1,"105":0,"106":0,"108":0,"109":0,"111":0,"112":0,"122":1,"123":0,"124":0,"125":0,"135":1,"136":0,"137":0,"138":0,"139":0,"141":0,"144":1}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/reporters/json/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/reporters/json/index.js","s":{"1":1,"2":1,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":17},"end":{"line":11,"column":44}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":28},"end":{"line":12,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":26}},"2":{"start":{"line":11,"column":0},"end":{"line":20,"column":2}},"3":{"start":{"line":12,"column":4},"end":{"line":19,"column":7}},"4":{"start":{"line":13,"column":8},"end":{"line":18,"column":11}}},"branchMap":{},"code":["var _ = require('lodash');","","/**"," * Reporter that simply dumps the summary object to file (default: newman-run-report.json)."," *"," * @param {Object} newman - The collection run object, with event hooks for reporting run details."," * @param {Object} options - A set of collection run options."," * @param {String} options.export - The path to which the summary object must be written."," * @returns {*}"," */","module.exports = function (newman, options) {","    newman.on('beforeDone', function (err, o) {","        newman.exports.push({","            name: 'json-reporter',","            default: 'newman-run-report.json',","            path: options.export,","            content: JSON.stringify(_.omit(o.summary, 'exports'), 0, 2)","        });","    });","};",""],"l":{"1":1,"11":1,"12":0,"13":0}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/reporters/html/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/reporters/html/index.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":48,"loc":{"start":{"line":48,"column":22},"end":{"line":48,"column":49}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":28},"end":{"line":53,"column":40}}},"3":{"name":"(anonymous_3)","line":60,"loc":{"start":{"line":60,"column":49},"end":{"line":60,"column":85}}},"4":{"name":"(anonymous_4)","line":88,"loc":{"start":{"line":88,"column":55},"end":{"line":88,"column":76}}},"5":{"name":"(anonymous_5)","line":106,"loc":{"start":{"line":106,"column":25},"end":{"line":106,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":37,"column":24}},"2":{"start":{"line":48,"column":0},"end":{"line":159,"column":2}},"3":{"start":{"line":50,"column":4},"end":{"line":51,"column":88}},"4":{"start":{"line":53,"column":4},"end":{"line":158,"column":7}},"5":{"start":{"line":54,"column":8},"end":{"line":134,"column":14}},"6":{"start":{"line":61,"column":16},"end":{"line":62,"column":54}},"7":{"start":{"line":64,"column":16},"end":{"line":80,"column":17}},"8":{"start":{"line":66,"column":20},"end":{"line":66,"column":61}},"9":{"start":{"line":69,"column":20},"end":{"line":69,"column":51}},"10":{"start":{"line":70,"column":20},"end":{"line":70,"column":80}},"11":{"start":{"line":73,"column":20},"end":{"line":73,"column":115}},"12":{"start":{"line":75,"column":20},"end":{"line":75,"column":83}},"13":{"start":{"line":76,"column":20},"end":{"line":76,"column":83}},"14":{"start":{"line":79,"column":20},"end":{"line":79,"column":71}},"15":{"start":{"line":82,"column":16},"end":{"line":82,"column":108}},"16":{"start":{"line":83,"column":16},"end":{"line":83,"column":108}},"17":{"start":{"line":85,"column":16},"end":{"line":85,"column":57}},"18":{"start":{"line":86,"column":16},"end":{"line":86,"column":57}},"19":{"start":{"line":88,"column":16},"end":{"line":103,"column":19}},"20":{"start":{"line":89,"column":20},"end":{"line":92,"column":68}},"21":{"start":{"line":94,"column":20},"end":{"line":98,"column":22}},"22":{"start":{"line":99,"column":20},"end":{"line":99,"column":75}},"23":{"start":{"line":101,"column":20},"end":{"line":101,"column":51}},"24":{"start":{"line":102,"column":20},"end":{"line":102,"column":60}},"25":{"start":{"line":108,"column":16},"end":{"line":120,"column":23}},"26":{"start":{"line":122,"column":16},"end":{"line":133,"column":17}},"27":{"start":{"line":123,"column":20},"end":{"line":123,"column":54}},"28":{"start":{"line":126,"column":20},"end":{"line":132,"column":23}},"29":{"start":{"line":136,"column":8},"end":{"line":136,"column":59}},"30":{"start":{"line":138,"column":8},"end":{"line":157,"column":11}},"31":{"start":{"line":161,"column":0},"end":{"line":161,"column":37}}},"branchMap":{"1":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":23},"end":{"line":50,"column":39}},{"start":{"line":50,"column":43},"end":{"line":50,"column":81}}]},"2":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":16},"end":{"line":64,"column":16}},{"start":{"line":64,"column":16},"end":{"line":64,"column":16}}]},"3":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":57},"end":{"line":94,"column":91}},{"start":{"line":94,"column":95},"end":{"line":98,"column":21}}]},"4":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":16},"end":{"line":122,"column":16}},{"start":{"line":122,"column":16},"end":{"line":122,"column":16}}]},"5":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":20},"end":{"line":122,"column":28}},{"start":{"line":122,"column":32},"end":{"line":122,"column":64}}]},"6":{"line":149,"type":"cond-expr","locations":[{"start":{"line":149,"column":64},"end":{"line":149,"column":84}},{"start":{"line":149,"column":87},"end":{"line":149,"column":96}}]},"7":{"line":150,"type":"cond-expr","locations":[{"start":{"line":150,"column":72},"end":{"line":150,"column":96}},{"start":{"line":150,"column":99},"end":{"line":150,"column":108}}]}},"code":["var fs = require('fs'),","    path = require('path'),","","    _ = require('lodash'),","    handlebars = require('handlebars'),","","    util = require('../../util'),","","    /**","     * An object of the default file read preferences.","     *","     * @type {Object}","     */","    FILE_READ_OPTIONS = { encoding: 'utf8' },","","    /**","     * The default Handlebars template to use when no user specified template is provided.","     *","     * @type {String}","     */","    DEFAULT_TEMPLATE = 'template-default.hbs',","","    /**","     * A reference object for run stats properties to use for various assertion states.","     *","     * @type {Object}","     */","    ASSERTION_STATE = { false: 'passed', true: 'failed' },","","    /**","     * The list of execution data fields that are aggregated over multiple requests for the collection run","     *","     * @type {String[]}","     */","    AGGREGATED_FIELDS = ['item', 'request', 'response'],","","    PostmanHTMLReporter;","","/**"," * A function that creates raw markup to be written to Newman HTML reports."," *"," * @param {Object} newman - The collection run object, with a event handler setter, used to enable event wise reporting."," * @param {Object} options - The set of HTML reporter run options."," * @param {String=} options.template - Optional path to the custom user defined HTML report template (Handlebars)."," * @param {String=} options.export - Optional custom path to create the HTML report at."," * @returns {*}"," */","PostmanHTMLReporter = function (newman, options) {","    // @todo throw error here or simply don't catch them and it will show up as warning on newman","    var htmlTemplate = options.template || path.join(__dirname, DEFAULT_TEMPLATE),","        compiler = handlebars.compile(fs.readFileSync(htmlTemplate, FILE_READ_OPTIONS));","","    newman.on('beforeDone', function () {","        var items = {},","            executionMeans = {},","            netTestCounts = {},","            aggregations = [],","            traversedRequests = {},","            executions = _.get(this, 'summary.run.executions'),","            assertions = _.transform(executions, function (result, currentExecution) {","                var reducedExecution,","                    executionId = currentExecution.id;","","                if (!_.has(traversedRequests, executionId)) {","                    // mark the current request instance as traversed","                    _.set(traversedRequests, executionId, 1);","","                    // set the base assertion and cumulative test details for the current request instance","                    _.set(result, executionId, {});","                    _.set(netTestCounts, executionId, { passed: 0, failed: 0 });","","                    // set base values for overall response size and time values","                    _.set(executionMeans, executionId, { time: { sum: 0, count: 0 }, size: { sum: 0, count: 0 } });","","                    reducedExecution = _.pick(currentExecution, AGGREGATED_FIELDS);","                    reducedExecution.response = reducedExecution.response.toJSON();","","                    // set sample request and response details for the current request","                    items[reducedExecution.item.id] = reducedExecution;","                }","","                executionMeans[executionId].time.sum += _.get(currentExecution, 'response.responseTime', 0);","                executionMeans[executionId].size.sum += _.get(currentExecution, 'response.responseSize', 0);","","                ++executionMeans[executionId].time.count;","                ++executionMeans[executionId].size.count;","","                _.forEach(currentExecution.assertions, function (assertion) {","                    var aggregationResult,","                        assertionName = assertion.assertion,","                        isError = _.get(assertion, 'error') !== undefined,","                        updateKey = _.get(ASSERTION_STATE, isError);","","                    result[executionId][assertionName] = result[executionId][assertionName] || {","                        name: assertionName,","                        passed: 0,","                        failed: 0","                    };","                    aggregationResult = result[executionId][assertionName];","","                    ++aggregationResult[updateKey];","                    ++netTestCounts[executionId][updateKey];","                });","            }, {}),","","            aggregator = function (execution) {","                // fetch aggregated run times and response sizes for items, (0 for failed requests)","                var aggregationMean = executionMeans[execution.item.id],","                    meanTime = _.get(aggregationMean, 'time', 0),","                    meanSize = _.get(aggregationMean, 'size', 0),","                    parent = execution.item.parent(),","                    previous = _.last(aggregations),","                    current = _.merge(items[execution.item.id], {","                        assertions: _.values(assertions[execution.item.id]),","                        mean: {","                            time: util.prettyms(meanTime.sum / meanTime.count),","                            size: util.filesize(meanSize.sum / meanSize.count)","                        },","                        cumulativeTests: netTestCounts[execution.item.id]","                    });","","                if (previous && parent.id === previous.parent.id) {","                    previous.executions.push(current);","                }","                else {","                    aggregations.push({","                        parent: {","                            id: parent.id,","                            name: util.getFullName(parent)","                        },","                        executions: [current]","                    });","                }","            };","","        _.forEach(this.summary.run.executions, aggregator);","","        this.exports.push({","            name: 'html-reporter',","            default: 'newman-run-report.html',","            path: options.export,","            content: compiler({","                timestamp: Date(),","                version: util.version,","                aggregations: aggregations,","                summary: {","                    stats: this.summary.run.stats,","                    collection: this.summary.collection,","                    globals: _.isObject(this.summary.globals) ? this.summary.globals : undefined,","                    environment: _.isObject(this.summary.environment) ? this.summary.environment : undefined,","                    failures: this.summary.run.failures.length,","                    responseTotal: util.filesize(this.summary.run.transfers.responseTotal),","                    responseAverage: util.prettyms(this.summary.run.timings.responseAverage),","                    duration: util.prettyms(this.summary.run.timings.completed - this.summary.run.timings.started)","                }","            })","        });","    });","};","","module.exports = PostmanHTMLReporter;",""],"l":{"1":1,"48":1,"50":0,"53":0,"54":0,"61":0,"64":0,"66":0,"69":0,"70":0,"73":0,"75":0,"76":0,"79":0,"82":0,"83":0,"85":0,"86":0,"88":0,"89":0,"94":0,"99":0,"101":0,"102":0,"108":0,"122":0,"123":0,"126":0,"136":0,"138":0,"161":1}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/reporters/junit/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/reporters/junit/index.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":16},"end":{"line":15,"column":51}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":28},"end":{"line":16,"column":40}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":36},"end":{"line":29,"column":70}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":25},"end":{"line":34,"column":55}}},"5":{"name":"(anonymous_5)","line":40,"loc":{"start":{"line":40,"column":35},"end":{"line":40,"column":51}}},"6":{"name":"(anonymous_6)","line":49,"loc":{"start":{"line":49,"column":34},"end":{"line":49,"column":55}}},"7":{"name":"(anonymous_7)","line":60,"loc":{"start":{"line":60,"column":62},"end":{"line":60,"column":78}}},"8":{"name":"(anonymous_8)","line":61,"loc":{"start":{"line":61,"column":47},"end":{"line":61,"column":62}}},"9":{"name":"(anonymous_9)","line":75,"loc":{"start":{"line":75,"column":48},"end":{"line":75,"column":69}}},"10":{"name":"(anonymous_10)","line":93,"loc":{"start":{"line":93,"column":55},"end":{"line":93,"column":76}}},"11":{"name":"(anonymous_11)","line":98,"loc":{"start":{"line":98,"column":28},"end":{"line":98,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5,"column":18}},"2":{"start":{"line":15,"column":0},"end":{"line":122,"column":2}},"3":{"start":{"line":16,"column":4},"end":{"line":121,"column":7}},"4":{"start":{"line":17,"column":8},"end":{"line":20,"column":17}},"5":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"6":{"start":{"line":23,"column":12},"end":{"line":23,"column":19}},"7":{"start":{"line":26,"column":8},"end":{"line":26,"column":79}},"8":{"start":{"line":27,"column":8},"end":{"line":27,"column":42}},"9":{"start":{"line":29,"column":8},"end":{"line":32,"column":15}},"10":{"start":{"line":30,"column":12},"end":{"line":30,"column":72}},"11":{"start":{"line":31,"column":12},"end":{"line":31,"column":54}},"12":{"start":{"line":34,"column":8},"end":{"line":108,"column":11}},"13":{"start":{"line":35,"column":12},"end":{"line":38,"column":30}},"14":{"start":{"line":40,"column":12},"end":{"line":42,"column":15}},"15":{"start":{"line":41,"column":16},"end":{"line":41,"column":61}},"16":{"start":{"line":44,"column":12},"end":{"line":44,"column":41}},"17":{"start":{"line":44,"column":32},"end":{"line":44,"column":39}},"18":{"start":{"line":46,"column":12},"end":{"line":46,"column":61}},"19":{"start":{"line":47,"column":12},"end":{"line":47,"column":44}},"20":{"start":{"line":49,"column":12},"end":{"line":91,"column":15}},"21":{"start":{"line":50,"column":16},"end":{"line":52,"column":54}},"22":{"start":{"line":55,"column":16},"end":{"line":58,"column":17}},"23":{"start":{"line":56,"column":20},"end":{"line":56,"column":35}},"24":{"start":{"line":57,"column":20},"end":{"line":57,"column":86}},"25":{"start":{"line":59,"column":16},"end":{"line":59,"column":33}},"26":{"start":{"line":60,"column":16},"end":{"line":68,"column":19}},"27":{"start":{"line":61,"column":20},"end":{"line":67,"column":23}},"28":{"start":{"line":62,"column":24},"end":{"line":66,"column":25}},"29":{"start":{"line":63,"column":28},"end":{"line":63,"column":43}},"30":{"start":{"line":64,"column":28},"end":{"line":64,"column":77}},"31":{"start":{"line":65,"column":28},"end":{"line":65,"column":45}},"32":{"start":{"line":70,"column":16},"end":{"line":72,"column":17}},"33":{"start":{"line":71,"column":20},"end":{"line":71,"column":92}},"34":{"start":{"line":75,"column":16},"end":{"line":84,"column":19}},"35":{"start":{"line":76,"column":20},"end":{"line":77,"column":46}},"36":{"start":{"line":78,"column":20},"end":{"line":83,"column":21}},"37":{"start":{"line":79,"column":24},"end":{"line":79,"column":97}},"38":{"start":{"line":82,"column":24},"end":{"line":82,"column":41}},"39":{"start":{"line":85,"column":16},"end":{"line":90,"column":17}},"40":{"start":{"line":86,"column":20},"end":{"line":86,"column":68}},"41":{"start":{"line":89,"column":20},"end":{"line":89,"column":42}},"42":{"start":{"line":93,"column":12},"end":{"line":95,"column":17}},"43":{"start":{"line":94,"column":16},"end":{"line":94,"column":77}},"44":{"start":{"line":96,"column":12},"end":{"line":96,"column":67}},"45":{"start":{"line":98,"column":12},"end":{"line":107,"column":15}},"46":{"start":{"line":99,"column":16},"end":{"line":100,"column":28}},"47":{"start":{"line":101,"column":16},"end":{"line":101,"column":43}},"48":{"start":{"line":102,"column":16},"end":{"line":106,"column":17}},"49":{"start":{"line":103,"column":20},"end":{"line":103,"column":54}},"50":{"start":{"line":104,"column":20},"end":{"line":104,"column":60}},"51":{"start":{"line":105,"column":20},"end":{"line":105,"column":73}},"52":{"start":{"line":110,"column":8},"end":{"line":120,"column":11}},"53":{"start":{"line":124,"column":0},"end":{"line":124,"column":31}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":8}},{"start":{"line":22,"column":8},"end":{"line":22,"column":8}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":40},"end":{"line":30,"column":65}},{"start":{"line":30,"column":69},"end":{"line":30,"column":71}}]},"3":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":17},"end":{"line":41,"column":35}},{"start":{"line":41,"column":41},"end":{"line":41,"column":59}}]},"4":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":12},"end":{"line":44,"column":12}},{"start":{"line":44,"column":12},"end":{"line":44,"column":12}}]},"5":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":16}},{"start":{"line":55,"column":16},"end":{"line":55,"column":16}}]},"6":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":24},"end":{"line":62,"column":24}},{"start":{"line":62,"column":24},"end":{"line":62,"column":24}}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":16}},{"start":{"line":70,"column":16},"end":{"line":70,"column":16}}]},"8":{"line":71,"type":"cond-expr","locations":[{"start":{"line":71,"column":65},"end":{"line":71,"column":84}},{"start":{"line":71,"column":88},"end":{"line":71,"column":91}}]},"9":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":20},"end":{"line":78,"column":20}},{"start":{"line":78,"column":20},"end":{"line":78,"column":20}}]},"10":{"line":79,"type":"cond-expr","locations":[{"start":{"line":79,"column":50},"end":{"line":79,"column":71}},{"start":{"line":79,"column":75},"end":{"line":79,"column":94}}]},"11":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":16},"end":{"line":85,"column":16}},{"start":{"line":85,"column":16},"end":{"line":85,"column":16}}]},"12":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":23},"end":{"line":94,"column":71}},{"start":{"line":94,"column":75},"end":{"line":94,"column":76}}]},"13":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":12},"end":{"line":96,"column":25}},{"start":{"line":96,"column":29},"end":{"line":96,"column":66}}]},"14":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":16},"end":{"line":102,"column":16}},{"start":{"line":102,"column":16},"end":{"line":102,"column":16}}]},"15":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":20},"end":{"line":102,"column":28}},{"start":{"line":102,"column":32},"end":{"line":102,"column":47}}]}},"code":["var _ = require('lodash'),","    xml = require('xmlbuilder'),","","    util = require('../../util'),","    JunitReporter;","","/**"," * A function that creates raw XML to be written to Newman JUnit reports."," *"," * @param {Object} newman - The collection run object, with a event handler setter, used to enable event wise reporting."," * @param {Object} reporterOptions - A set of JUnit reporter run options."," * @param {String=} reporterOptions.export - Optional custom path to create the XML report at."," * @returns {*}"," */","JunitReporter = function (newman, reporterOptions) {","    newman.on('beforeDone', function () {","        var report = _.get(newman, 'summary.run.executions'),","            collection = _.get(newman, 'summary.collection'),","            cache,","            root;","","        if (!report) {","            return;","        }","","        root = xml.create('testsuites', { version: '1.0', encoding: 'UTF-8' });","        root.att('name', collection.name);","","        cache = _.transform(report, function (accumulator, execution) {","            accumulator[execution.id] = accumulator[execution.id] || [];","            accumulator[execution.id].push(execution);","        }, {});","","        _.forEach(cache, function (executions, itemId) {","            var suite = root.ele('testsuite'),","                currentItem,","                tests = {},","                errorMessages;","","            collection.forEachItem(function (item) {","                (item.id === itemId) && (currentItem = item);","            });","","            if (!currentItem) { return; }","","            suite.att('name', util.getFullName(currentItem));","            suite.att('id', currentItem.id);","","            _.forEach(executions, function (execution) {","                var iteration = execution.cursor.iteration,","                    errored,","                    msg = `Iteration: ${iteration}\\n`;","","                // Process errors","                if (execution.requestError) {","                    errored = true;","                    msg += ('RequestError: ' + (execution.requestError.stack) + '\\n');","                }","                msg += '\\n---\\n';","                _.forEach(['testScript', 'prerequestScript'], function (prop) {","                    _.forEach(execution[prop], function (err) {","                        if (err.error) {","                            errored = true;","                            msg = (msg + prop + 'Error: ' + err.error.stack);","                            msg += '\\n---\\n';","                        }","                    });","                });","","                if (errored) {","                    errorMessages = _.isString(errorMessages) ? (errorMessages + msg) : msg;","                }","","                // Process assertions","                _.forEach(execution.assertions, function (assertion) {","                    var name = assertion.assertion,","                        err = assertion.error;","                    if (err) {","                        (_.isArray(tests[name]) ? tests[name].push(err) : (tests[name] = [err]));","                    }","                    else {","                        tests[name] = [];","                    }","                });","                if (execution.assertions) {","                    suite.att('tests', execution.assertions.length);","                }","                else {","                    suite.att('tests', 0);","                }","            });","","            suite.att('time', _.mean(_.map(executions, function (execution) {","                return _.get(execution, 'response.responseTime') / 1000 || 0;","            })));","            errorMessages && suite.ele('error').dat(errorMessages);","","            _.forOwn(tests, function (failures, name) {","                var testcase = suite.ele('testcase'),","                    failure;","                testcase.att('name', name);","                if (failures && failures.length) {","                    failure = testcase.ele('failure');","                    failure.att('type', 'AssertionFailure');","                    failure.dat('Failed ' + failures.length + ' times.');","                }","            });","        });","","        newman.exports.push({","            name: 'junit-reporter',","            default: 'newman-run-report.xml',","            path: reporterOptions.export,","            content: root.end({","                pretty: true,","                indent: '  ',","                newline: '\\n',","                allowEmpty: false","            })","        });","    });","};","","module.exports = JunitReporter;",""],"l":{"1":1,"15":1,"16":0,"17":0,"22":0,"23":0,"26":0,"27":0,"29":0,"30":0,"31":0,"34":0,"35":0,"40":0,"41":0,"44":0,"46":0,"47":0,"49":0,"50":0,"55":0,"56":0,"57":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"70":0,"71":0,"75":0,"76":0,"78":0,"79":0,"82":0,"85":0,"86":0,"89":0,"93":0,"94":0,"96":0,"98":0,"99":0,"101":0,"102":0,"103":0,"104":0,"105":0,"110":0,"124":1}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/reporters/progress.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/reporters/progress.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":19},"end":{"line":13,"column":63}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":23},"end":{"line":20,"column":41}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":22},"end":{"line":24,"column":34}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":22},"end":{"line":28,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":21}},"2":{"start":{"line":13,"column":0},"end":{"line":31,"column":2}},"3":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"4":{"start":{"line":15,"column":8},"end":{"line":15,"column":15}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":35}},"6":{"start":{"line":20,"column":4},"end":{"line":22,"column":7}},"7":{"start":{"line":21,"column":8},"end":{"line":21,"column":56}},"8":{"start":{"line":24,"column":4},"end":{"line":26,"column":7}},"9":{"start":{"line":25,"column":8},"end":{"line":25,"column":24}},"10":{"start":{"line":28,"column":4},"end":{"line":30,"column":7}},"11":{"start":{"line":29,"column":8},"end":{"line":29,"column":19}},"12":{"start":{"line":33,"column":0},"end":{"line":33,"column":43}},"13":{"start":{"line":34,"column":0},"end":{"line":34,"column":34}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]},"2":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":8},"end":{"line":14,"column":22}},{"start":{"line":14,"column":26},"end":{"line":14,"column":48}}]}},"code":["var progress = require('cli-progress'),","    ProgressReporter;","","/**"," * Little reporter that generates a collection progress status bar on CLI."," *"," * @param {Object} newman - A run object with event handler specification methods."," * @param {Function} newman.on - An event setter method that provides hooks for reporting collection run progress."," * @param {Object} reporterOptions - A set of reporter specific run options."," * @param {Object} options - A set of generic collection run options."," * @returns {*}"," */","ProgressReporter = function (newman, reporterOptions, options) {","    if (options.silent || reporterOptions.silent) {","        return;","    }","","    var bar = new progress.Bar({});","","    newman.on('start', function (err, o) {","        bar.start(o.cursor.length * o.cursor.cycles, 0);","    });","","    newman.on('item', function () {","        bar.increment();","    });","","    newman.on('done', function () {","        bar.stop();","    });","};","","ProgressReporter.prototype.dominant = true;","module.exports = ProgressReporter;",""],"l":{"1":1,"13":1,"14":0,"15":0,"18":0,"20":0,"21":0,"24":0,"25":0,"28":0,"29":0,"33":1,"34":1}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/reporters/emojitrain.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/reporters/emojitrain.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":17},"end":{"line":11,"column":61}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":39}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":22},"end":{"line":27,"column":43}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":22},"end":{"line":31,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":19}},"2":{"start":{"line":11,"column":0},"end":{"line":34,"column":2}},"3":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"4":{"start":{"line":13,"column":8},"end":{"line":13,"column":15}},"5":{"start":{"line":16,"column":4},"end":{"line":17,"column":20}},"6":{"start":{"line":19,"column":4},"end":{"line":21,"column":6}},"7":{"start":{"line":20,"column":8},"end":{"line":20,"column":47}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":37}},"9":{"start":{"line":24,"column":4},"end":{"line":24,"column":38}},"10":{"start":{"line":25,"column":4},"end":{"line":25,"column":40}},"11":{"start":{"line":27,"column":4},"end":{"line":29,"column":7}},"12":{"start":{"line":28,"column":8},"end":{"line":28,"column":78}},"13":{"start":{"line":31,"column":4},"end":{"line":33,"column":7}},"14":{"start":{"line":32,"column":8},"end":{"line":32,"column":73}},"15":{"start":{"line":36,"column":0},"end":{"line":36,"column":41}},"16":{"start":{"line":37,"column":0},"end":{"line":37,"column":32}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":8},"end":{"line":12,"column":22}},{"start":{"line":12,"column":26},"end":{"line":12,"column":48}}]},"3":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":11}},{"start":{"line":20,"column":16},"end":{"line":20,"column":45}}]},"4":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":63},"end":{"line":28,"column":68}},{"start":{"line":28,"column":71},"end":{"line":28,"column":76}}]},"5":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":30},"end":{"line":28,"column":33}},{"start":{"line":28,"column":37},"end":{"line":28,"column":59}}]},"6":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":58},"end":{"line":32,"column":63}},{"start":{"line":32,"column":66},"end":{"line":32,"column":71}}]},"7":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":22},"end":{"line":32,"column":25}},{"start":{"line":32,"column":29},"end":{"line":32,"column":54}}]}},"code":["var SmileyReporter;","","/**"," * Fills your collection run (read life) with a bunch of Emojis 😀."," *"," * @param {Object} newman - The collection run object with event handling hooks to enable reporting."," * @param {Object} reporterOptions - A set of reporter specific run options."," * @param {Object} options - A set of generic collection run options."," * @returns {*}"," */","SmileyReporter = function (newman, reporterOptions, options) {","    if (options.silent || reporterOptions.silent) {","        return;","    }","","    var fails = {},","        noteFailure;","","    noteFailure = function (err, args) {","        err && (fails[args.cursor.ref] = true);","    };","","    newman.on('script', noteFailure);","    newman.on('request', noteFailure);","    newman.on('assertion', noteFailure);","","    newman.on('item', function (err, args) {","        process.stdout.write((err || fails[args.cursor.ref]) ? '😢 ' : '😀 ');","    });","","    newman.on('done', function (err) {","        console.info((err || Object.keys(fails).length) ? ' 😭' : ' 😍');","    });","};","","SmileyReporter.prototype.dominant = true;","module.exports = SmileyReporter;",""],"l":{"1":1,"11":1,"12":0,"13":0,"16":0,"19":0,"20":0,"23":0,"24":0,"25":0,"27":0,"28":0,"31":0,"32":0,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/version.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/lib/version.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":29}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":44}},"2":{"start":{"line":3,"column":0},"end":{"line":5,"column":2}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":26}}},"branchMap":{},"code":["var version = require('../package').version;","","module.exports = function () {","    console.info(version);","};",""],"l":{"1":1,"3":1,"4":0}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/bin/newman.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/bin/newman.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":15},"end":{"line":16,"column":44}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":37},"end":{"line":27,"column":58}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":19},"end":{"line":34,"column":43}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":37}},"2":{"start":{"line":4,"column":0},"end":{"line":25,"column":6}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":38}},"4":{"start":{"line":19,"column":8},"end":{"line":24,"column":9}},"5":{"start":{"line":20,"column":12},"end":{"line":20,"column":56}},"6":{"start":{"line":23,"column":12},"end":{"line":23,"column":81}},"7":{"start":{"line":27,"column":0},"end":{"line":46,"column":3}},"8":{"start":{"line":28,"column":4},"end":{"line":32,"column":5}},"9":{"start":{"line":29,"column":8},"end":{"line":29,"column":50}},"10":{"start":{"line":30,"column":8},"end":{"line":30,"column":42}},"11":{"start":{"line":31,"column":8},"end":{"line":31,"column":31}},"12":{"start":{"line":34,"column":4},"end":{"line":45,"column":7}},"13":{"start":{"line":35,"column":8},"end":{"line":35,"column":79}},"14":{"start":{"line":37,"column":8},"end":{"line":40,"column":9}},"15":{"start":{"line":38,"column":12},"end":{"line":38,"column":47}},"16":{"start":{"line":39,"column":12},"end":{"line":39,"column":46}},"17":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"18":{"start":{"line":43,"column":12},"end":{"line":43,"column":28}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":8}},{"start":{"line":19,"column":8},"end":{"line":19,"column":8}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"3":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":16}},{"start":{"line":29,"column":20},"end":{"line":29,"column":49}}]},"4":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":22},"end":{"line":30,"column":33}},{"start":{"line":30,"column":37},"end":{"line":30,"column":40}}]},"5":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":23},"end":{"line":35,"column":26}},{"start":{"line":35,"column":30},"end":{"line":35,"column":47}},{"start":{"line":35,"column":51},"end":{"line":35,"column":78}}]},"6":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":8}},{"start":{"line":37,"column":8},"end":{"line":37,"column":8}}]},"7":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":12},"end":{"line":38,"column":20}},{"start":{"line":38,"column":24},"end":{"line":38,"column":46}}]},"8":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":26},"end":{"line":39,"column":37}},{"start":{"line":39,"column":41},"end":{"line":39,"column":44}}]},"9":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":8}},{"start":{"line":42,"column":8},"end":{"line":42,"column":8}}]},"10":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":12},"end":{"line":42,"column":20}},{"start":{"line":42,"column":24},"end":{"line":42,"column":60}}]}},"code":["//#!/usr/bin/env node","require('../lib/node-version-check'); // @note that this should not respect CLI --silent","","var _ = require('lodash'),","","    cli = require('../lib/cli'),","    newman = require('../'),","","    /**","     * Calls the appropriate Newman command.","     *","     * @param {Object} options - The set of options passed via the CLI, including the command, and other details.","     * @param {Function} callback - The function called to mark the completion of command parsing.","     * @returns {*}","     */","    dispatch = function (options, callback) {","        var command = options.command;","","        if (_.isFunction(newman[command])) {","            newman[command](options[command], callback);","        }","        else {","            callback(new Error('Oops, unsupported command: ' + options.command));","        }","    };","","cli(process.argv.slice(2), 'newman', function (err, args) {","    if (err) {","        err.help && console.info(err.help + '\\n');  // will print out usage information.","        console.error(err.message || err);","        return process.exit(1); // @todo: args do not arrive on CLI error hence cannot read `-x`","    }","","    dispatch(args, function (err, summary) {","        var runError = err || summary.run.error || summary.run.failures.length;","","        if (err) {","            err.help && console.info(err.help);  // will print out usage information.","            console.error(err.message || err);","        }","","        if (runError && !_.get(args, 'run.suppressExitCode')) {","            process.exit(1);","        }","    });","});",""],"l":{"2":2,"4":0,"17":0,"19":0,"20":0,"23":0,"27":0,"28":0,"29":0,"30":0,"31":0,"34":0,"35":0,"37":0,"38":0,"39":0,"42":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/npm/publish-wiki.js":{"path":"/home/travis/build/npmtest/node-npmtest-newman/node_modules/newman/npm/publish-wiki.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[0,0],"2":[1,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":17},"end":{"line":14,"column":33}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":8},"end":{"line":26,"column":24}}},"3":{"name":"(anonymous_3)","line":46,"loc":{"start":{"line":46,"column":8},"end":{"line":46,"column":24}}},"4":{"name":"(anonymous_4)","line":66,"loc":{"start":{"line":66,"column":16},"end":{"line":66,"column":38}}},"5":{"name":"(anonymous_5)","line":77,"loc":{"start":{"line":77,"column":8},"end":{"line":77,"column":24}}},"6":{"name":"(anonymous_6)","line":84,"loc":{"start":{"line":84,"column":43},"end":{"line":84,"column":59}}},"7":{"name":"(anonymous_7)","line":89,"loc":{"start":{"line":89,"column":7},"end":{"line":89,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":18}},"3":{"start":{"line":6,"column":0},"end":{"line":12,"column":56}},"4":{"start":{"line":14,"column":0},"end":{"line":94,"column":2}},"5":{"start":{"line":16,"column":4},"end":{"line":93,"column":7}},"6":{"start":{"line":27,"column":12},"end":{"line":27,"column":59}},"7":{"start":{"line":31,"column":12},"end":{"line":31,"column":39}},"8":{"start":{"line":32,"column":12},"end":{"line":32,"column":37}},"9":{"start":{"line":37,"column":12},"end":{"line":37,"column":73}},"10":{"start":{"line":47,"column":12},"end":{"line":49,"column":24}},"11":{"start":{"line":52,"column":12},"end":{"line":52,"column":79}},"12":{"start":{"line":55,"column":12},"end":{"line":55,"column":49}},"13":{"start":{"line":58,"column":12},"end":{"line":58,"column":60}},"14":{"start":{"line":60,"column":12},"end":{"line":68,"column":21}},"15":{"start":{"line":67,"column":16},"end":{"line":67,"column":57}},"16":{"start":{"line":79,"column":12},"end":{"line":79,"column":33}},"17":{"start":{"line":81,"column":12},"end":{"line":81,"column":33}},"18":{"start":{"line":82,"column":12},"end":{"line":82,"column":34}},"19":{"start":{"line":83,"column":12},"end":{"line":83,"column":64}},"20":{"start":{"line":84,"column":12},"end":{"line":87,"column":15}},"21":{"start":{"line":85,"column":16},"end":{"line":85,"column":23}},"22":{"start":{"line":86,"column":16},"end":{"line":86,"column":27}},"23":{"start":{"line":90,"column":8},"end":{"line":91,"column":82}},"24":{"start":{"line":92,"column":8},"end":{"line":92,"column":19}},"25":{"start":{"line":97,"column":0},"end":{"line":97,"column":39}}},"branchMap":{"1":{"line":90,"type":"cond-expr","locations":[{"start":{"line":90,"column":28},"end":{"line":90,"column":69}},{"start":{"line":91,"column":12},"end":{"line":91,"column":80}}]},"2":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":0},"end":{"line":97,"column":14}},{"start":{"line":97,"column":18},"end":{"line":97,"column":38}}]}},"code":["//#!/usr/bin/env node","/* eslint-env node, es6 */","require('shelljs/global');","require('colors');","","var fs = require('fs'),","    path = require('path'),","    async = require('async'),","","    WIKI_URL = 'https://github.com/postmanlabs/newman.wiki.git',","    WIKI_GIT_PATH = path.join(__dirname, '..', '.tmp', 'github-wiki'),","    WIKI_VERSION = exec('git describe --always').stdout;","","module.exports = function (exit) {","","    async.series([","        // build the reference MD","        require('./build-wiki'),","","        /**","         * Clones the existing wiki from WIKI_URL into WIKI_GIT_PATH.","         *","         * @param {Function} next - The callback function invoked ot mark the end of the wiki clone routine.","         * @returns {*}","         */","        function (next) {","            console.info('Publishing wiki...'.yellow.bold);","","            // create a location to clone repository","            // @todo - maybe do this outside in an os-level temp folder to avoid recursive .git","            mkdir('-p', WIKI_GIT_PATH);","            rm('-rf', WIKI_GIT_PATH);","","            // @todo: Consider navigating to WIKI_GIT_PATH, setting up a new git repo there, point the remote","            // to WIKI_GIT_URL,","            // @todo: and push","            exec(`git clone ${WIKI_URL} ${WIKI_GIT_PATH} --quiet`, next);","        },","","        /**","         * Update contents of the repository.","         *","         * @param {Function} next - The callback function invoked to mark the completion of the wiki creation.","         * @returns {*}","         */","        function (next) {","            var source = fs.readFileSync(path.join('out', 'wiki', 'REFERENCE.md')).toString(),","                home,","                sidebar;","","            // extract sidebar from source","            sidebar = source.replace(/<a name=\"Collection\"><\\/a>[\\s\\S]+/g, '');","","            // remove sidebar data from home","            home = source.substr(sidebar.length);","","            // add timestamp to sidebar","            sidebar += '\\n\\n ' + (new Date()).toUTCString();","","            async.each([{","                path: path.join('.tmp', 'github-wiki', '_Sidebar.md'),","                data: sidebar","            }, {","                path: path.join('.tmp', 'github-wiki', 'Home.md'),","                data: home","            }], function (opts, next) {","                fs.writeFile(opts.path, opts.data, next);","            }, next);","        },","","        /**","         * Publishes the wiki to the Git remote.","         *","         * @param {Function} next - The callback function invoked to mark the end of the wiki publish routine.","         * @returns {*}","         */","        function (next) {","            // silence terminal output to prevent leaking sensitive information","            config.silent = true;","","            pushd(WIKI_GIT_PATH);","            exec('git add --all');","            exec('git commit -m \"[auto] ' + WIKI_VERSION + '\"');","            exec('git push origin master', function (code) {","                popd();","                next(code);","            });","        }","    ], function (code) {","        console.info(code ? colors.red.bold('\\nwiki publish failed.') :","            colors.green(`\\nwiki published successfully for \"${WIKI_VERSION}\".`));","        exit(code);","    });","};","","// ensure we run this script exports if this is a direct stdin.tty run","!module.parent && module.exports(exit);",""],"l":{"3":1,"4":1,"6":1,"14":1,"16":0,"27":0,"31":0,"32":0,"37":0,"47":0,"52":0,"55":0,"58":0,"60":0,"67":0,"79":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"90":0,"92":0,"97":1}}}